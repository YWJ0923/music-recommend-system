{"ast":null,"code":"import _slicedToArray from\"D:/Programming/Project/Music_Recommend_System/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';import React,{useEffect,useState}from'react';import{Image,Button,Table,Layout}from'antd';import{Link}from'react-router-dom';import{SERVER_URL}from'../../utils/constant';import{playBarStore}from\"../../stores/playBarStore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Content=Layout.Content;var colomns=[{key:'index',render:function render(text,record,index){return index+1;}},{dataIndex:'musicName',key:'musicName',title:'歌曲',render:function render(text,record,index){return/*#__PURE__*/_jsx(Button,{type:\"link\",style:{padding:'0'},onClick:function onClick(){playBarStore.addMusic(record);},children:text});},width:'500px'},{dataIndex:'artistName',key:'artistName',title:'歌手',render:function render(text,record){return/*#__PURE__*/_jsx(Link,{to:\"/artist/\".concat(record.artistId),children:text});},width:'400px'},{dataIndex:'timeLength',key:'timeLength',title:'时长',render:function render(text){text=parseInt(text);text/=1000;var min=Math.floor(text/60);if(min<10){min='0'+min;}var sec=Math.floor(text%60);if(sec<10){sec='0'+sec;}return/*#__PURE__*/_jsx(\"span\",{children:min+':'+sec});},width:'100px'}];export default function Album(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){axios({method:'GET',url:SERVER_URL+'album/'+props.match.params.albumId}).then(function(response){if(response.data.status===200){setData(response.data.data);}else{props.history.push('/error');}});},[props]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info1\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(Image,{src:data.albumImg}),/*#__PURE__*/_jsxs(\"div\",{className:\"info2\",style:{marginLeft:'50px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:data.albumName}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u6B4C\\u624B\\uFF1A\",data.artistName]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u53D1\\u884C\\u65E5\\u671F\\uFF1A\",data.albumPublishTime]})]})]}),/*#__PURE__*/_jsxs(Content,{style:{padding:'10px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:'20px 0'},children:\"\\u5305\\u542B\\u6B4C\\u66F2\\u5217\\u8868\"}),/*#__PURE__*/_jsx(Table,{columns:colomns,dataSource:data.musicVOList,pagination:{defaultPageSize:20},rowKey:\"musicId\"})]})]});}","map":{"version":3,"sources":["D:/Programming/Project/Music_Recommend_System/client/src/pages/Album/index.jsx"],"names":["axios","React","useEffect","useState","Image","Button","Table","Layout","Link","SERVER_URL","playBarStore","Content","colomns","key","render","text","record","index","dataIndex","title","padding","addMusic","width","artistId","parseInt","min","Math","floor","sec","Album","props","data","setData","method","url","match","params","albumId","then","response","status","history","push","display","albumImg","marginLeft","albumName","artistName","albumPublishTime","margin","musicVOList","defaultPageSize"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Image, Button, Table, Layout } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { SERVER_URL } from '../../utils/constant';\r\nimport {playBarStore} from \"../../stores/playBarStore\";\r\n\r\nconst {Content} = Layout;\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text,record,index) => {return index + 1;}\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" style={{padding: '0'}} onClick={() => {\r\n                playBarStore.addMusic(record);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        render: (text, record) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        title: '时长',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\n\r\nexport default function Album(props) {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + 'album/' + props.match.params.albumId,\r\n        }).then((response) => {\r\n            if (response.data.status === 200) {\r\n                setData(response.data.data);\r\n            } else {\r\n                props.history.push('/error');\r\n            }\r\n        });\r\n    }, [props])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"info1\" style={{display: 'flex'}}>\r\n                <Image src={data.albumImg} />\r\n                <div className=\"info2\" style={{marginLeft: '50px'}}>\r\n                    <h2>{data.albumName}</h2>\r\n                    <p>歌手：{data.artistName}</p>\r\n                    <p>发行日期：{data.albumPublishTime}</p>\r\n                </div>\r\n            </div>\r\n            <Content style={{padding: '10px'}}>\r\n                <h2 style={{margin: '20px 0'}}>包含歌曲列表</h2>\r\n                <Table columns={colomns} dataSource={data.musicVOList} pagination={{defaultPageSize: 20}} rowKey=\"musicId\" />\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}