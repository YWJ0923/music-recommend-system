{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\MusicRecommendSystem\\\\front\\\\src\\\\pages\\\\Album\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Image, Button, Table, Layout } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { playMusic } from '../../utils/play';\nimport { SERVER_URL } from '../../utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = Layout;\nconst colomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  }\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      style: {\n        padding: '0'\n      },\n      onClick: () => {\n        playMusic(record); // console.log(text);\n        // console.log(record);\n        // console.log(index);\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  render: (text, record) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/artist/${record.artistId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  title: '时长',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this);\n  },\n  width: '100px'\n}];\nexport default function Album(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: SERVER_URL + 'album/' + props.match.params.albumId\n    }).then(response => {\n      if (response.data.status === 2) {\n        removeToken();\n        props.history.push('/');\n      } else if (response.data.status === 1) {\n        setData(response.data.data);\n      }\n    });\n  }, [props]);\n  return updated && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info1\",\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: data.albumImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info2\",\n        style: {\n          marginLeft: '50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data.albumName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u6B4C\\u624B\\uFF1A\", data.artistName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u53D1\\u884C\\u65E5\\u671F\\uFF1A\", data.albumPublishTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '20px 0'\n        },\n        children: \"\\u5305\\u542B\\u6B4C\\u66F2\\u5217\\u8868\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: colomns,\n        dataSource: data.musicVOList,\n        pagination: {\n          defaultPageSize: 20\n        },\n        rowKey: \"musicId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Album, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Album;\n\nvar _c;\n\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"sources":["D:/Programming/Project/MusicRecommendSystem/front/src/pages/Album/index.jsx"],"names":["axios","React","Component","Image","Button","Table","Layout","Link","playMusic","SERVER_URL","Content","colomns","key","render","text","record","index","dataIndex","title","padding","width","artistId","parseInt","min","Math","floor","sec","Album","props","data","setData","useState","useEffect","method","url","match","params","albumId","then","response","status","removeToken","history","push","updated","display","albumImg","marginLeft","albumName","artistName","albumPublishTime","margin","musicVOList","defaultPageSize"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { Component } from 'react';\r\nimport { Image, Button, Table, Layout } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { playMusic } from '../../utils/play';\r\nimport { SERVER_URL } from '../../utils/constant';\r\n\r\nconst {Content} = Layout;\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text,record,index) => {return index + 1;}\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" style={{padding: '0'}} onClick={() => {\r\n                playMusic(record);\r\n                // console.log(text);\r\n                // console.log(record);\r\n                // console.log(index);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        render: (text, record) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        title: '时长',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\n\r\nexport default function Album(props) {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + 'album/' + props.match.params.albumId,\r\n        }).then((response) => {\r\n            if (response.data.status === 2) {\r\n                removeToken();\r\n                props.history.push('/');\r\n            } else if (response.data.status === 1) {\r\n                setData(response.data.data);\r\n            }\r\n        });\r\n    }, [props])\r\n\r\n        return (\r\n            updated && <>\r\n                <div className=\"info1\" style={{display: 'flex'}}>\r\n                    <Image src={data.albumImg} />\r\n                    <div className=\"info2\" style={{marginLeft: '50px'}}>\r\n                        <h2>{data.albumName}</h2>\r\n                        <p>歌手：{data.artistName}</p>\r\n                        <p>发行日期：{data.albumPublishTime}</p>\r\n                    </div>\r\n                </div>\r\n                <Content style={{padding: '10px'}}>\r\n                    <h2 style={{margin: '20px 0'}}>包含歌曲列表</h2>\r\n                    <Table columns={colomns} dataSource={data.musicVOList} pagination={{defaultPageSize: 20}} rowKey=\"musicId\" />\r\n                </Content>\r\n            </>\r\n        );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}