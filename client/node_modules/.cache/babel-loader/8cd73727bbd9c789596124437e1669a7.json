{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\MusicRecommendSystem\\\\front\\\\src\\\\pages\\\\MyMusic\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Layout, Menu, Image, Button, Table, Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { getToken, removeToken } from '../../utils/auth';\nimport { playMusic } from '../../utils/play';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Content,\n  Sider\n} = Layout;\nconst {\n  SubMenu\n} = Menu;\nconst rankColomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  }\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        playMusic(record);\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/artist/${record.artistId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'userPlayTimes',\n  key: 'userPlayTimes',\n  title: '播放次数',\n  render: text => {\n    return text + '次';\n  },\n  width: '100px'\n}];\nconst collectionListColomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  }\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        playMusic(record);\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/artist/${record.artistId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  title: '时长',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }, this);\n  },\n  width: '100px'\n}];\nexport default class MyMusic extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collectionLists: [],\n      rankList: [],\n      type: '',\n      collectionList: {},\n      selectedKey: ''\n    };\n\n    this.handleClick = obj => {\n      const {\n        collectionLists\n      } = this.state;\n\n      if (obj.key === 'rank') {\n        this.setState({\n          type: 'rank',\n          selectedKey: 'rank'\n        });\n      } else {\n        const list = collectionLists.find(list => {\n          return list.collectionListId + '' === obj.key;\n        });\n        this.setState({\n          collectionList: list\n        }, () => {\n          this.setState({\n            type: 'collection_list',\n            selectedKey: list.collectionListId\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:3001/server/user/music_rank',\n      headers: {\n        Authorization: getToken()\n      }\n    }).then(response => {\n      if (response.data.status === 2) {\n        removeToken();\n      } else if (response.data.status === 1) {\n        this.setState({\n          type: 'rank',\n          rankList: response.data.data,\n          selectedKey: 'rank'\n        });\n      }\n    });\n    axios({\n      method: 'GET',\n      url: 'http://localhost:3001/server/collection_list',\n      headers: {\n        Authorization: getToken()\n      }\n    }).then(response => {\n      if (response.data.status === 2) {\n        removeToken();\n      } else if (response.data.status === 1) {\n        this.setState({\n          collectionLists: response.data.data\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      rankList,\n      collectionLists,\n      type,\n      collectionList,\n      selectedKey\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Sider, {\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          mode: \"inline\",\n          selectedKeys: selectedKey,\n          style: {\n            height: '100%'\n          },\n          onClick: this.handleClick,\n          children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n            children: \"\\u542C\\u6B4C\\u6392\\u884C\"\n          }, \"rank\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SubMenu, {\n            title: \"\\u521B\\u5EFA\\u7684\\u6B4C\\u5355\",\n            children: collectionLists.map(list => {\n              return /*#__PURE__*/_jsxDEV(Menu.Item, {\n                style: {\n                  paddingLeft: '10px',\n                  height: '50px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    height: '40px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Image, {\n                    width: \"40px\",\n                    src: list.collectionListImg,\n                    preview: false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginLeft: '10px',\n                      width: '100px',\n                      height: '40px',\n                      overflow: 'hidden'\n                    },\n                    children: list.collectionListName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#999',\n                      margin: 'auto 0 auto auto'\n                    },\n                    children: [list.musicVOList.length, \"\\u9996\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this)\n              }, list.collectionListId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 41\n              }, this);\n            })\n          }, \"collection_list\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          padding: '0',\n          minHeight: 280\n        },\n        children: [type === 'rank' && /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: rankList,\n          columns: rankColomns,\n          title: () => '听歌排行'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 41\n        }, this), type === 'collection_list' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              height: '200px',\n              backgroundColor\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: collectionList.collectionListName,\n              src: collectionList.collectionListImg,\n              style: {\n                margin: '0 10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              title: collectionList.collectionListName,\n              style: {\n                width: '100%'\n              },\n              bordered: false,\n              children: [collectionList.createDate, \"\\u521B\\u5EFA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            columns: collectionListColomns,\n            dataSource: collectionList.musicVOList,\n            rowKey: record => record.collectionListId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Programming/Project/MusicRecommendSystem/front/src/pages/MyMusic/index.jsx"],"names":["React","Component","Layout","Menu","Image","Button","Table","Card","Link","axios","getToken","removeToken","playMusic","Content","Sider","SubMenu","rankColomns","key","render","text","record","index","dataIndex","title","width","artistId","albumId","collectionListColomns","parseInt","min","Math","floor","sec","MyMusic","state","collectionLists","rankList","type","collectionList","selectedKey","handleClick","obj","setState","list","find","collectionListId","componentDidMount","method","url","headers","Authorization","then","response","data","status","height","map","paddingLeft","display","collectionListImg","marginLeft","overflow","collectionListName","color","margin","musicVOList","length","padding","minHeight","backgroundColor","createDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Layout, Menu, Image, Button, Table, Card } from 'antd'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { getToken, removeToken } from '../../utils/auth';\r\nimport { playMusic } from '../../utils/play';\r\n\r\nconst { Content, Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\nconst rankColomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n            return index + 1;\r\n        }\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playMusic(record);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'userPlayTimes',\r\n        key: 'userPlayTimes',\r\n        title: '播放次数',\r\n        render: (text) => {\r\n            return text + '次';\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\nconst collectionListColomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n            return index + 1;\r\n        }\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playMusic(record);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        title: '时长',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\nexport default class MyMusic extends Component {\r\n    state = {collectionLists: [], rankList: [], type: '', collectionList: {}, selectedKey: ''}\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/user/music_rank',\r\n            headers: {\r\n                Authorization: getToken()\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.status === 2) {\r\n                removeToken();\r\n            } else if (response.data.status === 1) {\r\n                this.setState({type: 'rank', rankList: response.data.data, selectedKey: 'rank'});\r\n            }\r\n        });\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/collection_list',\r\n            headers: {\r\n                Authorization: getToken()\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.status === 2) {\r\n                removeToken();\r\n            } else if (response.data.status === 1) {\r\n                this.setState({collectionLists: response.data.data});\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick = (obj) => {\r\n        const {collectionLists} = this.state;\r\n        if (obj.key === 'rank') {\r\n            this.setState({type: 'rank', selectedKey: 'rank'});\r\n        } else {\r\n            const list = collectionLists.find((list) => {\r\n                return list.collectionListId + '' === obj.key;\r\n            })\r\n            this.setState({collectionList: list}, () => {\r\n                this.setState({type: 'collection_list', selectedKey: list.collectionListId});\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {rankList, collectionLists, type, collectionList, selectedKey} = this.state;\r\n        return (\r\n            <Layout>\r\n                <Sider>\r\n                    <Menu mode=\"inline\" selectedKeys={selectedKey} style={{height: '100%'}} onClick={this.handleClick}>\r\n                        <Menu.Item key=\"rank\">听歌排行</Menu.Item>\r\n                        <SubMenu key=\"collection_list\" title=\"创建的歌单\">\r\n                            {collectionLists.map((list) => {\r\n                                return (<Menu.Item key={list.collectionListId} style={{paddingLeft: '10px', height: '50px'}}>\r\n                                    <div style={{display: 'flex', height: '40px'}}>\r\n                                        <Image width=\"40px\" src={list.collectionListImg} preview={false} />\r\n                                        <div style={{marginLeft: '10px', width: '100px', height: '40px', overflow: 'hidden'}}>{list.collectionListName}</div>\r\n                                        <div style={{color: '#999', margin: 'auto 0 auto auto'}}>{list.musicVOList.length}首</div>\r\n                                    </div>\r\n                                </Menu.Item>);\r\n                            })}\r\n                        </SubMenu>\r\n                        \r\n                    </Menu>\r\n                </Sider>\r\n                <Content style={{ padding: '0', minHeight: 280}}>\r\n                    {type === 'rank' && <Table dataSource={rankList} columns={rankColomns} title={() => '听歌排行'} />}\r\n                    {type === 'collection_list' && \r\n                    <>\r\n                        <div style={{display: 'flex', height: '200px', backgroundColor}}>\r\n                            <img alt={collectionList.collectionListName} src={collectionList.collectionListImg} style={{margin: '0 10px'}}/>\r\n                            <Card title={collectionList.collectionListName} style={{width: '100%'}} bordered={false}>\r\n                                {collectionList.createDate}创建\r\n                            </Card>\r\n                        </div>\r\n                        <Table columns={collectionListColomns} dataSource={collectionList.musicVOList} rowKey={record => record.collectionListId} />\r\n                    </>}\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}