{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\MusicRecommendSystem\\\\front\\\\src\\\\pages\\\\SearchResult\\\\index.jsx\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Menu, Table, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { playMusic } from '../../utils/play';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  }\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        playMusic(record);\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  title: '时长',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this);\n  },\n  width: '100px'\n}];\nexport default class SearchResult extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = obj => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:3001/server/search',\n        params: {\n          word: this.state.word,\n          type: obj.key\n        }\n      }).then(response => {\n        if (response.data.status === 1) {\n          this.setState({\n            data: response.data.data\n          });\n        }\n      });\n    };\n  }\n\n  did(props, state) {\n    const {\n      search\n    } = props.location;\n    const searchParams = new URLSearchParams(search.substring(1));\n    const word = searchParams.get('word');\n    axios({\n      method: 'GET',\n      url: 'http://localhost:3001/server/search',\n      params: {\n        word: word,\n        type: 'music'\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.status === 1) {\n        state.data = response.data.data;\n        state.word = word;\n      }\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        onClick: this.handleClick,\n        mode: \"horizontal\",\n        defaultSelectedKeys: \"music\",\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u5355\\u66F2\"\n        }, \"music\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u6B4C\\u624B\"\n        }, \"artist\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u4E13\\u8F91\"\n        }, \"album\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: data,\n        columns: colomns,\n        pagination: {\n          defaultPageSize: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["D:/Programming/Project/MusicRecommendSystem/front/src/pages/SearchResult/index.jsx"],"names":["axios","React","Component","Menu","Table","Button","Link","playMusic","colomns","key","render","text","record","index","dataIndex","title","width","albumId","parseInt","min","Math","floor","sec","SearchResult","handleClick","obj","method","url","params","word","state","type","then","response","data","status","setState","did","props","search","location","searchParams","URLSearchParams","substring","get","console","log","defaultPageSize"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport {Menu, Table, Button} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { playMusic } from '../../utils/play';\r\n\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text,record,index) => {return index + 1;}\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playMusic(record);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        title: '时长',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\n\r\nexport default class SearchResult extends Component {\r\n    did(props, state) {\r\n        const {search} = props.location;\r\n        const searchParams = new URLSearchParams(search.substring(1));\r\n        const word = searchParams.get('word');\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/search',\r\n            params: {\r\n                word: word,\r\n                type: 'music'\r\n            }\r\n        }).then((response) => {\r\n            console.log(response);\r\n            if (response.data.status === 1) {\r\n                state.data = response.data.data;\r\n                state.word = word;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleClick = (obj) => {\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/search',\r\n            params: {\r\n                word: this.state.word,\r\n                type: obj.key\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.status === 1) {\r\n                this.setState({data: response.data.data});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return (\r\n            <>\r\n                <Menu onClick={this.handleClick} mode=\"horizontal\" defaultSelectedKeys=\"music\">\r\n                    <Menu.Item key=\"music\">\r\n                        单曲\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"artist\">\r\n                        歌手\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"album\">\r\n                        专辑\r\n                    </Menu.Item>\r\n                </Menu>\r\n                <Table dataSource={data} columns={colomns} pagination={{defaultPageSize: 20}} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}