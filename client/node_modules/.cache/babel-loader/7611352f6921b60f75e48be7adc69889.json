{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\MusicRecommendSystem\\\\front\\\\src\\\\pages\\\\MyMusic\\\\Ranking\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Button, Table } from 'antd';\nimport { getToken, removeToken } from '../../../utils/auth';\nimport { SERVER_URL } from '../../../utils/constant';\nimport { playMusic } from '../../../utils/play';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  },\n  width: '50px'\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  ellipsis: true,\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        playMusic(record);\n      },\n      style: {\n        padding: '0'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this);\n  },\n  width: '300px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  ellipsis: true,\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/artist/${record.artistId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this);\n  },\n  width: '150px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  ellipsis: true,\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this);\n  },\n  width: '150px'\n}, {\n  dataIndex: 'userPlayTimes',\n  key: 'userPlayTimes',\n  title: '播放次数',\n  render: text => {\n    return text + '次';\n  },\n  width: '100px'\n}];\nexport default function Ranking(props) {\n  _s();\n\n  const [ranking, setRanking] = useState([]);\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: SERVER_URL + 'user/music_ranking',\n      headers: {\n        Authorization: getToken()\n      }\n    }).then(response => {\n      if (response.data.status === 2) {\n        removeToken();\n        props.history.push('/');\n      } else if (response.data.status === 1) {\n        setRanking(response.data.data);\n      }\n    }); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: ranking,\n      columns: colomns,\n      title: () => '听歌排行',\n      rowKey: record => record.musicId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Ranking, \"+SSq9AzlTlUaDnerI+NybTHOjsE=\");\n\n_c = Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"sources":["D:/Programming/Project/MusicRecommendSystem/front/src/pages/MyMusic/Ranking/index.jsx"],"names":["React","useEffect","useState","axios","Link","Button","Table","getToken","removeToken","SERVER_URL","playMusic","colomns","key","render","text","record","index","width","dataIndex","title","ellipsis","padding","artistId","albumId","Ranking","props","ranking","setRanking","method","url","headers","Authorization","then","response","data","status","history","push","musicId"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {Button, Table} from 'antd';\r\nimport { getToken, removeToken } from '../../../utils/auth';\r\nimport { SERVER_URL } from '../../../utils/constant';\r\nimport { playMusic } from '../../../utils/play';\r\n\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n            return index + 1;\r\n        },\r\n        width: '50px'\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playMusic(record);\r\n            }} style={{padding: '0'}}>{text}</Button>);\r\n        },\r\n        width: '300px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '150px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '150px'\r\n    },\r\n    {\r\n        dataIndex: 'userPlayTimes',\r\n        key: 'userPlayTimes',\r\n        title: '播放次数',\r\n        render: (text) => {\r\n            return text + '次';\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\n\r\nexport default function Ranking(props) {\r\n    const [ranking, setRanking] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + 'user/music_ranking',\r\n            headers: {\r\n              Authorization: getToken()\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.status === 2) {\r\n                removeToken();\r\n                props.history.push('/');\r\n            } else if (response.data.status === 1) {\r\n                setRanking(response.data.data);\r\n            }\r\n        });  // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Table dataSource={ranking} columns={colomns} title={() => '听歌排行'} rowKey={record => record.musicId} />\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}