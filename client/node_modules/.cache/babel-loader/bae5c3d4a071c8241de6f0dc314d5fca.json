{"ast":null,"code":"import _classCallCheck from\"D:/Programming/Project/Music_Recommend_System/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import{makeObservable,observable,action,toJS}from'mobx';import{getPlayUrl}from\"../utils/play\";import PubSub from\"pubsub-js\";var PlayBarStore=function PlayBarStore(){var _this=this;_classCallCheck(this,PlayBarStore);this.playList=[];this.index=0;this.playUrl='';this.setPlayList=function(newPlayList){_this.playList=newPlayList;};this.setIndex=function(newIndex){_this.index=newIndex;};this.addMusic=function(newMusic){// console.log(toJS(this.playList));\nPubSub.publish('addPlayTimes');getPlayUrl(toJS(newMusic));var newPlayList=_this.playList.filter(function(music){return music.musicId!==newMusic.musicId;});newPlayList.push(newMusic);_this.setPlayList(newPlayList);_this.setIndex(newPlayList.length-1);// console.log(toJS(this.playList));\n};this.addPlayList=function(playList){var newPlayList=toJS(_this.playList);getPlayUrl(playList[0]);if(newPlayList.length>0){var _loop=function _loop(i){newPlayList=newPlayList.filter(function(music){return music.musicId!==playList[i].musicId;});};for(var i=0;i<playList.length;i++){_loop(i);}var newIndex=newPlayList.length;// console.log(newIndex);\nnewPlayList=newPlayList.concat(playList);// console.log(newPlayList);\n_this.setPlayList(newPlayList);_this.setIndex(newIndex);}else{_this.setPlayList(playList);_this.setIndex(0);}};this.setPlayUrl=function(newPlayUrl){_this.playUrl=newPlayUrl;};makeObservable(this,{playList:observable,index:observable,playUrl:observable,setPlayList:action,addMusic:action,setIndex:action,setPlayUrl:action,addPlayList:action});};export var playBarStore=new PlayBarStore();","map":{"version":3,"sources":["D:/Programming/Project/Music_Recommend_System/client/src/stores/playBarStore.js"],"names":["makeObservable","observable","action","toJS","getPlayUrl","PubSub","PlayBarStore","playList","index","playUrl","setPlayList","newPlayList","setIndex","newIndex","addMusic","newMusic","publish","filter","music","musicId","push","length","addPlayList","i","concat","setPlayUrl","newPlayUrl","playBarStore"],"mappings":"6KAAA,OAAQA,cAAR,CAAwBC,UAAxB,CAAoCC,MAApC,CAA4CC,IAA5C,KAAuD,MAAvD,CACA,OAAQC,UAAR,KAAyB,eAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,C,GAEMC,CAAAA,Y,CAOF,uBAAc,wDANdC,QAMc,CANH,EAMG,MAJdC,KAIc,CAJN,CAIM,MAFdC,OAEc,CAFJ,EAEI,MAadC,WAbc,CAaA,SAACC,WAAD,CAAiB,CAC3B,KAAI,CAACJ,QAAL,CAAgBI,WAAhB,CACH,CAfa,MAiBdC,QAjBc,CAiBH,SAACC,QAAD,CAAc,CACrB,KAAI,CAACL,KAAL,CAAaK,QAAb,CACH,CAnBa,MAqBdC,QArBc,CAqBH,SAACC,QAAD,CAAc,CACrB;AACAV,MAAM,CAACW,OAAP,CAAe,cAAf,EACAZ,UAAU,CAACD,IAAI,CAACY,QAAD,CAAL,CAAV,CACA,GAAIJ,CAAAA,WAAW,CAAG,KAAI,CAACJ,QAAL,CAAcU,MAAd,CAAqB,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,OAAN,GAAkBJ,QAAQ,CAACI,OAA/B,EAA1B,CAAlB,CACAR,WAAW,CAACS,IAAZ,CAAiBL,QAAjB,EACA,KAAI,CAACL,WAAL,CAAiBC,WAAjB,EACA,KAAI,CAACC,QAAL,CAAcD,WAAW,CAACU,MAAZ,CAAqB,CAAnC,EACA;AACH,CA9Ba,MAgCdC,WAhCc,CAgCA,SAACf,QAAD,CAAc,CACxB,GAAII,CAAAA,WAAW,CAAGR,IAAI,CAAC,KAAI,CAACI,QAAN,CAAtB,CACAH,UAAU,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAV,CACA,GAAII,WAAW,CAACU,MAAZ,CAAqB,CAAzB,CAA4B,0BACfE,CADe,EAEpBZ,WAAW,CAAGA,WAAW,CAACM,MAAZ,CAAmB,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,OAAN,GAAkBZ,QAAQ,CAACgB,CAAD,CAAR,CAAYJ,OAAlC,EAAxB,CAAd,CAFoB,EACxB,IAAK,GAAII,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGhB,QAAQ,CAACc,MAA7B,CAAqCE,CAAC,EAAtC,CAA0C,OAAjCA,CAAiC,EAEzC,CACD,GAAIV,CAAAA,QAAQ,CAAGF,WAAW,CAACU,MAA3B,CACA;AACAV,WAAW,CAAGA,WAAW,CAACa,MAAZ,CAAmBjB,QAAnB,CAAd,CACA;AACA,KAAI,CAACG,WAAL,CAAiBC,WAAjB,EACA,KAAI,CAACC,QAAL,CAAcC,QAAd,EACH,CAVD,IAUO,CACH,KAAI,CAACH,WAAL,CAAiBH,QAAjB,EACA,KAAI,CAACK,QAAL,CAAc,CAAd,EACH,CACJ,CAjDa,MAmDda,UAnDc,CAmDD,SAACC,UAAD,CAAgB,CACzB,KAAI,CAACjB,OAAL,CAAeiB,UAAf,CACH,CArDa,CACV1B,cAAc,CAAC,IAAD,CAAO,CACjBO,QAAQ,CAAEN,UADO,CAEjBO,KAAK,CAAEP,UAFU,CAGjBQ,OAAO,CAAER,UAHQ,CAIjBS,WAAW,CAAER,MAJI,CAKjBY,QAAQ,CAAEZ,MALO,CAMjBU,QAAQ,CAAEV,MANO,CAOjBuB,UAAU,CAAEvB,MAPK,CAQjBoB,WAAW,CAAEpB,MARI,CAAP,CAAd,CAUH,C,CA6CL,MAAO,IAAMyB,CAAAA,YAAY,CAAG,GAAIrB,CAAAA,YAAJ,EAArB","sourcesContent":["import {makeObservable, observable, action, toJS} from 'mobx';\r\nimport {getPlayUrl} from \"../utils/play\";\r\nimport PubSub from \"pubsub-js\";\r\n\r\nclass PlayBarStore {\r\n    playList = [];\r\n\r\n    index = 0;\r\n\r\n    playUrl = '';\r\n\r\n    constructor() {\r\n        makeObservable(this, {\r\n            playList: observable,\r\n            index: observable,\r\n            playUrl: observable,\r\n            setPlayList: action,\r\n            addMusic: action,\r\n            setIndex: action,\r\n            setPlayUrl: action,\r\n            addPlayList: action\r\n        })\r\n    }\r\n\r\n    setPlayList = (newPlayList) => {\r\n        this.playList = newPlayList;\r\n    }\r\n\r\n    setIndex = (newIndex) => {\r\n        this.index = newIndex;\r\n    }\r\n\r\n    addMusic = (newMusic) => {\r\n        // console.log(toJS(this.playList));\r\n        PubSub.publish('addPlayTimes');\r\n        getPlayUrl(toJS(newMusic));\r\n        let newPlayList = this.playList.filter(music => music.musicId !== newMusic.musicId);\r\n        newPlayList.push(newMusic);\r\n        this.setPlayList(newPlayList);\r\n        this.setIndex(newPlayList.length - 1);\r\n        // console.log(toJS(this.playList));\r\n    }\r\n\r\n    addPlayList = (playList) => {\r\n        let newPlayList = toJS(this.playList);\r\n        getPlayUrl(playList[0]);\r\n        if (newPlayList.length > 0) {\r\n            for (let i = 0; i < playList.length; i++) {\r\n                newPlayList = newPlayList.filter(music => music.musicId !== playList[i].musicId);\r\n            }\r\n            let newIndex = newPlayList.length;\r\n            // console.log(newIndex);\r\n            newPlayList = newPlayList.concat(playList);\r\n            // console.log(newPlayList);\r\n            this.setPlayList(newPlayList);\r\n            this.setIndex(newIndex);\r\n        } else {\r\n            this.setPlayList(playList);\r\n            this.setIndex(0);\r\n        }\r\n    }\r\n\r\n    setPlayUrl = (newPlayUrl) => {\r\n        this.playUrl = newPlayUrl;\r\n    }\r\n}\r\n\r\nexport const playBarStore = new PlayBarStore();\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}