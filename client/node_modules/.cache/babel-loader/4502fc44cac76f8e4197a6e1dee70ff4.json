{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React\\\\Music_Recommend_System\\\\front\\\\src\\\\pages\\\\MyMusic\\\\CollectionList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Image, Button, Table, Card } from 'antd';\nimport { SERVER_URL } from '../../../utils/constant';\nimport { playMusic } from '../../../utils/play';\nimport { getToken, removeToken } from '../../../utils/auth';\nimport { DeleteOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst collectionListColomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  },\n  width: '50px'\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  ellipsis: true,\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        playMusic(record);\n      },\n      style: {\n        padding: '0'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this);\n  },\n  width: '300px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  ellipsis: true,\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/artist/${record.artistId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this);\n  },\n  width: '150px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  ellipsis: true,\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this);\n  },\n  width: '150px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  title: '时长',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this);\n  },\n  width: '100px'\n}];\nexport default function CollectionList(props) {\n  _s();\n\n  const [collectionList, setCollectionList] = useState({});\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: SERVER_URL + 'collection_list/' + props.match.params.collection_list_id,\n      headers: {\n        Authorization: getToken()\n      }\n    }).then(response => {\n      if (response.data.status === 2) {\n        removeToken();\n        props.history.push('/');\n      } else if (response.data.status === 1) {\n        setCollectionList(response.data.data);\n      }\n    }); // eslint-disable-next-line\n  }, [props]);\n\n  const deleteCollectionList = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '200px',\n        backgroundColor: 'white',\n        padding: '0 10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        alt: collectionList.collectionListName,\n        src: collectionList.collectionListImg,\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '0 10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          title: collectionList.collectionListName,\n          style: {\n            width: '100%',\n            height: '120px'\n          },\n          bordered: false,\n          children: [collectionList.createDate, \" \\u521B\\u5EFA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '40px 20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(PlayCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 39\n            }, this),\n            type: \"primary\",\n            onClick: () => deleteCollectionList(),\n            children: \"\\u64AD\\u653E\\u5168\\u90E8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            onClick: () => deleteCollectionList(collectionList),\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: collectionListColomns,\n      dataSource: collectionList.musicVOList,\n      rowKey: record => record.musicId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CollectionList, \"NOPeAfuRX0MxKR37453AHpSWN98=\");\n\n_c = CollectionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionList\");","map":{"version":3,"sources":["D:/Programming/React/Music_Recommend_System/front/src/pages/MyMusic/CollectionList/index.jsx"],"names":["React","useEffect","useState","Link","axios","Image","Button","Table","Card","SERVER_URL","playMusic","getToken","removeToken","DeleteOutlined","PlayCircleOutlined","collectionListColomns","key","render","text","record","index","width","dataIndex","title","ellipsis","padding","artistId","albumId","parseInt","min","Math","floor","sec","CollectionList","props","collectionList","setCollectionList","method","url","match","params","collection_list_id","headers","Authorization","then","response","data","status","history","push","deleteCollectionList","display","height","backgroundColor","collectionListName","collectionListImg","createDate","musicVOList","musicId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,IAA/B,QAA2C,MAA3C;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAAQC,cAAR,EAAwBC,kBAAxB,QAAiD,mBAAjD;;;AAEA,MAAMC,qBAAqB,GAAG,CAC1B;AACIC,EAAAA,GAAG,EAAE,OADT;AAEIC,EAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,KAAyB;AAC7B,WAAOA,KAAK,GAAG,CAAf;AACH,GAJL;AAKIC,EAAAA,KAAK,EAAE;AALX,CAD0B,EAQ1B;AACIC,EAAAA,SAAS,EAAE,WADf;AAEIN,EAAAA,GAAG,EAAE,WAFT;AAGIO,EAAAA,KAAK,EAAE,IAHX;AAIIC,EAAAA,QAAQ,EAAE,IAJd;AAKIP,EAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,KAAyB;AAC7B,wBAAQ,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,MAAM;AACvCV,QAAAA,SAAS,CAACS,MAAD,CAAT;AACH,OAFO;AAEL,MAAA,KAAK,EAAE;AAACM,QAAAA,OAAO,EAAE;AAAV,OAFF;AAAA,gBAEmBP;AAFnB;AAAA;AAAA;AAAA;AAAA,YAAR;AAGH,GATL;AAUIG,EAAAA,KAAK,EAAE;AAVX,CAR0B,EAoB1B;AACIC,EAAAA,SAAS,EAAE,YADf;AAEIN,EAAAA,GAAG,EAAE,YAFT;AAGIO,EAAAA,KAAK,EAAE,IAHX;AAIIC,EAAAA,QAAQ,EAAE,IAJd;AAKIP,EAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,KAAyB;AAC7B,wBAAQ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUD,MAAM,CAACO,QAAS,EAArC;AAAA,gBAAyCR;AAAzC;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAPL;AAQIG,EAAAA,KAAK,EAAE;AARX,CApB0B,EA8B1B;AACIC,EAAAA,SAAS,EAAE,WADf;AAEIN,EAAAA,GAAG,EAAE,WAFT;AAGIO,EAAAA,KAAK,EAAE,IAHX;AAIIC,EAAAA,QAAQ,EAAE,IAJd;AAKIP,EAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,KAAyB;AAC7B,wBAAQ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASD,MAAM,CAACQ,OAAQ,EAAnC;AAAA,gBAAuCT;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAPL;AAQIG,EAAAA,KAAK,EAAE;AARX,CA9B0B,EAwC1B;AACIC,EAAAA,SAAS,EAAE,YADf;AAEIN,EAAAA,GAAG,EAAE,YAFT;AAGIO,EAAAA,KAAK,EAAE,IAHX;AAIIN,EAAAA,MAAM,EAAGC,IAAD,IAAU;AACdA,IAAAA,IAAI,GAAGU,QAAQ,CAACV,IAAD,CAAf;AACAA,IAAAA,IAAI,IAAI,IAAR;AACA,QAAIW,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAI,GAAG,EAAlB,CAAV;;AACA,QAAIW,GAAG,GAAG,EAAV,EAAc;AACVA,MAAAA,GAAG,GAAG,MAAMA,GAAZ;AACH;;AACD,QAAIG,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAWb,IAAI,GAAG,EAAlB,CAAV;;AACA,QAAIc,GAAG,GAAG,EAAV,EAAc;AACVA,MAAAA,GAAG,GAAG,MAAMA,GAAZ;AACH;;AACD,wBAAQ;AAAA,gBAAOH,GAAG,GAAG,GAAN,GAAYG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAhBL;AAiBIX,EAAAA,KAAK,EAAE;AAjBX,CAxC0B,CAA9B;AA6DA,eAAe,SAASY,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsClC,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAAC;AACFiC,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE7B,UAAU,GAAG,kBAAb,GAAkCyB,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,kBAFxD;AAGFC,MAAAA,OAAO,EAAE;AACTC,QAAAA,aAAa,EAAEhC,QAAQ;AADd;AAHP,KAAD,CAAL,CAMGiC,IANH,CAMSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC5BnC,QAAAA,WAAW;AACXsB,QAAAA,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,OAHD,MAGO,IAAIJ,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AACnCX,QAAAA,iBAAiB,CAACS,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAjB;AACH;AACJ,KAbD,EADY,CAcP;AACR,GAfQ,EAeN,CAACZ,KAAD,CAfM,CAAT;;AAiBA,QAAMgB,oBAAoB,GAAG,MAAM,CAElC,CAFD;;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE,OAA1B;AAAmCC,QAAAA,eAAe,EAAE,OAApD;AAA6D5B,QAAAA,OAAO,EAAE;AAAtE,OAAZ;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAEU,cAAc,CAACmB,kBAA3B;AAA+C,QAAA,GAAG,EAAEnB,cAAc,CAACoB,iBAAnE;AAAsF,QAAA,KAAK,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAE;AAAC9B,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEU,cAAc,CAACmB,kBAA5B;AAAgD,UAAA,KAAK,EAAE;AAACjC,YAAAA,KAAK,EAAE,MAAR;AAAgB+B,YAAAA,MAAM,EAAE;AAAxB,WAAvD;AAAyF,UAAA,QAAQ,EAAE,KAAnG;AAAA,qBACKjB,cAAc,CAACqB,UADpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAE;AAAC/B,YAAAA,OAAO,EAAE;AAAV,WAAZ;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,oBAAd;AAAsC,YAAA,IAAI,EAAC,SAA3C;AAAqD,YAAA,OAAO,EAAE,MAAMyB,oBAAoB,EAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAKA,oBAAoB,CAACf,cAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEpB,qBAAhB;AAAuC,MAAA,UAAU,EAAEoB,cAAc,CAACsB,WAAlE;AAA+E,MAAA,MAAM,EAAEtC,MAAM,IAAIA,MAAM,CAACuC;AAAxG;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AAiBH;;GAzCuBzB,c;;KAAAA,c","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { Image, Button, Table, Card } from 'antd';\r\nimport { SERVER_URL } from '../../../utils/constant';\r\nimport { playMusic } from '../../../utils/play';\r\nimport { getToken, removeToken } from '../../../utils/auth';\r\nimport {DeleteOutlined, PlayCircleOutlined} from \"@ant-design/icons\";\r\n\r\nconst collectionListColomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n            return index + 1;\r\n        },\r\n        width: '50px'\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playMusic(record);\r\n            }} style={{padding: '0'}}>{text}</Button>);\r\n        },\r\n        width: '300px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '150px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '150px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        title: '时长',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\n\r\nexport default function CollectionList(props) {\r\n    const [collectionList, setCollectionList] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + 'collection_list/' + props.match.params.collection_list_id,\r\n            headers: {\r\n            Authorization: getToken()\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.status === 2) {\r\n                removeToken();\r\n                props.history.push('/');\r\n            } else if (response.data.status === 1) {\r\n                setCollectionList(response.data.data);\r\n            }\r\n        });  // eslint-disable-next-line\r\n    }, [props]);\r\n\r\n    const deleteCollectionList = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{display: 'flex', height: '200px', backgroundColor: 'white', padding: '0 10px'}}>\r\n                <Image alt={collectionList.collectionListName} src={collectionList.collectionListImg} width=\"200px\"/>\r\n                <div style={{padding: '0 10px'}}>\r\n                    <Card title={collectionList.collectionListName} style={{width: '100%', height: '120px'}} bordered={false}>\r\n                        {collectionList.createDate} 创建\r\n                    </Card>\r\n                    <div style={{padding: '40px 20px'}}>\r\n                        <Button icon={<PlayCircleOutlined />} type=\"primary\" onClick={() => deleteCollectionList()}>播放全部</Button>\r\n                        <Button type=\"danger\" onClick={() =>deleteCollectionList(collectionList)}>删除</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Table columns={collectionListColomns} dataSource={collectionList.musicVOList} rowKey={record => record.musicId} />\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}