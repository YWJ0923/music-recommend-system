{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React\\\\Music_Recommend_System\\\\front\\\\src\\\\pages\\\\MyMusic\\\\Ranking\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Button, Table } from 'antd';\nimport { getToken, removeToken } from '../../../utils/auth';\nimport { SERVER_URL } from '../../../utils/constant';\nimport PubSub from \"pubsub-js\";\nimport { useLocalStore } from \"mobx-react\";\nimport { playBarStore } from \"../../../stores/playBarStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Ranking(props) {\n  _s();\n\n  const {\n    addMusic\n  } = useLocalStore(() => playBarStore);\n  const [ranking, setRanking] = useState([]);\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: SERVER_URL + 'user/music_ranking',\n      headers: {\n        Authorization: getToken()\n      }\n    }).then(response => {\n      if (response.data.status === 2) {\n        removeToken();\n        props.history.push('/');\n      } else if (response.data.status === 1) {\n        setRanking(response.data.data);\n      }\n    }); // eslint-disable-next-line\n  }, []);\n\n  const colomns = () => {\n    return {\n      key: 'index',\n      render: (text, record, index) => {\n        return index + 1;\n      },\n      width: '50px'\n    }, {\n      dataIndex: 'musicName',\n      key: 'musicName',\n      title: '歌曲',\n      ellipsis: true,\n      render: (text, record, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          onClick: () => {\n            addMusic(record);\n          },\n          style: {\n            padding: '0'\n          },\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this);\n      },\n      width: '300px'\n    }, {\n      dataIndex: 'artistName',\n      key: 'artistName',\n      title: '歌手',\n      ellipsis: true,\n      render: (text, record, index) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/artist/${record.artistId}`,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this);\n      },\n      width: '150px'\n    }, {\n      dataIndex: 'albumName',\n      key: 'albumName',\n      title: '专辑',\n      ellipsis: true,\n      render: (text, record, index) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/album/${record.albumId}`,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this);\n      },\n      width: '150px'\n    }, {\n      dataIndex: 'userPlayTimes',\n      key: 'userPlayTimes',\n      title: '播放次数',\n      render: text => {\n        return text + '次';\n      },\n      width: '100px'\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: ranking,\n      columns: colomns,\n      title: () => '听歌排行',\n      rowKey: record => record.musicId,\n      pagination: {\n        defaultPageSize: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Ranking, \"ZHcb89UBoC2X2v0+S7iDTTOmlvc=\", false, function () {\n  return [useLocalStore];\n});\n\n_c = Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"sources":["D:/Programming/React/Music_Recommend_System/front/src/pages/MyMusic/Ranking/index.jsx"],"names":["React","useEffect","useState","axios","Link","Button","Table","getToken","removeToken","SERVER_URL","PubSub","useLocalStore","playBarStore","Ranking","props","addMusic","ranking","setRanking","method","url","headers","Authorization","then","response","data","status","history","push","colomns","key","render","text","record","index","width","dataIndex","title","ellipsis","padding","artistId","albumId","musicId","defaultPageSize"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Table} from 'antd';\r\nimport { getToken, removeToken } from '../../../utils/auth';\r\nimport { SERVER_URL } from '../../../utils/constant';\r\nimport PubSub from \"pubsub-js\";\r\nimport {useLocalStore} from \"mobx-react\";\r\nimport {playBarStore} from \"../../../stores/playBarStore\";\r\n\r\nexport default function Ranking(props) {\r\n    const {addMusic} = useLocalStore(() => playBarStore);\r\n\r\n    const [ranking, setRanking] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + 'user/music_ranking',\r\n            headers: {\r\n              Authorization: getToken()\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.status === 2) {\r\n                removeToken();\r\n                props.history.push('/');\r\n            } else if (response.data.status === 1) {\r\n                setRanking(response.data.data);\r\n            }\r\n        });  // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const colomns = () => {\r\n        return (\r\n            {\r\n                key: 'index',\r\n                render: (text, record, index) => {\r\n                    return index + 1;\r\n                },\r\n                width: '50px'\r\n            },\r\n            {\r\n                dataIndex: 'musicName',\r\n                key: 'musicName',\r\n                title: '歌曲',\r\n                ellipsis: true,\r\n                render: (text, record, index) => {\r\n                    return (<Button type=\"link\" onClick={() => {\r\n                        addMusic(record);\r\n                    }} style={{padding: '0'}}>{text}</Button>);\r\n                },\r\n                width: '300px'\r\n            },\r\n            {\r\n                dataIndex: 'artistName',\r\n                key: 'artistName',\r\n                title: '歌手',\r\n                ellipsis: true,\r\n                render: (text, record, index) => {\r\n                    return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n                },\r\n                width: '150px'\r\n            },\r\n            {\r\n                dataIndex: 'albumName',\r\n                key: 'albumName',\r\n                title: '专辑',\r\n                ellipsis: true,\r\n                render: (text, record, index) => {\r\n                    return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n                },\r\n                width: '150px'\r\n            },\r\n            {\r\n                dataIndex: 'userPlayTimes',\r\n                key: 'userPlayTimes',\r\n                title: '播放次数',\r\n                render: (text) => {\r\n                    return text + '次';\r\n                },\r\n                width: '100px'\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table dataSource={ranking} columns={colomns} title={() => '听歌排行'} rowKey={record => record.musicId} pagination={{defaultPageSize: 20}} />\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}