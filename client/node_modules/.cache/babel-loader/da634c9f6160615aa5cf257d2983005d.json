{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\MusicRecommendSystem\\\\front\\\\src\\\\pages\\\\Artist\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, Layout, Typography, Menu, Table, Button } from 'antd';\nimport PubSub from 'pubsub-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Paragraph\n} = Typography;\nconst {\n  Content\n} = Layout;\nconst colomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  }\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        axios({\n          method: 'GET',\n          url: 'http://localhost:3001/kugou',\n          params: {\n            r: 'play/getdata',\n            hash: record.musicId,\n            album_id: record.albumId,\n            mid: 1\n          }\n        }).then(response => {\n          record.playUrl = response.data.data.play_url;\n          PubSub.publish('play', record); // record是包含url的MusicVO\n        }); // console.log(text);\n        // console.log(record);\n        // console.log(index);\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this);\n  },\n  width: '200px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName'\n}];\nexport default class Artist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      musicData: [],\n      albumData: [],\n      type: \"music\"\n    };\n\n    this.getMusic = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:3001/server/artist',\n        params: {\n          artistId: this.props.match.params.artistId\n        }\n      }).then(response => {\n        this.setState({\n          musicData: response.data\n        });\n      });\n    };\n\n    this.getAlbum = () => {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:3001/server/artist/album',\n        params: {\n          artistId: this.props.match.params.artistId\n        }\n      }).then(response => {\n        this.setState({\n          albumData: response.data\n        });\n      });\n    };\n\n    this.getData = obj => {\n      if (obj.key === 'music') {\n        this.setState({\n          type: 'music'\n        });\n\n        if (this.state.musicData.length === 0) {\n          this.getMusic();\n        }\n      } else {\n        this.setState({\n          type: 'album'\n        });\n\n        if (this.state.albumData.length === 0) {\n          this.getAlbum();\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getMusic();\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          height: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: musicData.artistName,\n          src: data.artistImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: data.artistName,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflow: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(Paragraph, {\n              ellipsis: {\n                rows: 3,\n                expandable: true,\n                suffix: '...',\n                symbol: '展开'\n              },\n              children: data.artistDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          padding: '10px',\n          minHeight: 280\n        },\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          mode: \"horizontal\",\n          defaultSelectedKeys: \"music\",\n          onClick: this.getData,\n          children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n            children: \"\\u5355\\u66F2\"\n          }, \"music\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            children: \"\\u4E13\\u8F91\"\n          }, \"album\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), this.state.type === 'music' ? /*#__PURE__*/_jsxDEV(Table, {\n          columns: colomns,\n          dataSource: this.state.musicData.musicVOList,\n          showHeader: false,\n          pagination: {\n            defaultPageSize: 20\n          },\n          rowKey: \"musicId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Programming/Project/MusicRecommendSystem/front/src/pages/Artist/index.jsx"],"names":["React","Component","axios","Card","Layout","Typography","Menu","Table","Button","PubSub","Paragraph","Content","colomns","key","render","text","record","index","dataIndex","method","url","params","r","hash","musicId","album_id","albumId","mid","then","response","playUrl","data","play_url","publish","width","parseInt","min","Math","floor","sec","Artist","state","musicData","albumData","type","getMusic","artistId","props","match","setState","getAlbum","getData","obj","length","componentDidMount","display","height","artistName","artistImg","overflow","rows","expandable","suffix","symbol","artistDescription","padding","minHeight","musicVOList","defaultPageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Card, Layout, Typography, Menu, Table, Button } from 'antd';\r\nimport PubSub from 'pubsub-js';\r\n\r\nconst { Paragraph } = Typography;\r\nconst {Content} = Layout\r\n\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text,record,index) => {return index + 1;}\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                axios({\r\n                    method: 'GET',\r\n                    url: 'http://localhost:3001/kugou',\r\n                    params: {\r\n                        r: 'play/getdata',\r\n                        hash: record.musicId,\r\n                        album_id: record.albumId,\r\n                        mid: 1\r\n                    }\r\n                }).then((response) => {\r\n                    record.playUrl = response.data.data.play_url;\r\n                    PubSub.publish('play', record);  // record是包含url的MusicVO\r\n                })\r\n                // console.log(text);\r\n                // console.log(record);\r\n                // console.log(index);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '200px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n    }\r\n];\r\n\r\nexport default class Artist extends Component {\r\n    state = {musicData: [], albumData: [], type: \"music\"};\r\n\r\n    componentDidMount() {\r\n        this.getMusic();\r\n    }\r\n\r\n    getMusic = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/artist',\r\n            params: {\r\n                artistId: this.props.match.params.artistId\r\n            }\r\n        }).then((response) => {\r\n            this.setState({musicData: response.data});\r\n        });\r\n    }\r\n\r\n    getAlbum = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/artist/album',\r\n            params: {\r\n                artistId: this.props.match.params.artistId\r\n            }\r\n        }).then((response) => {\r\n            this.setState({albumData: response.data});\r\n        });\r\n    }\r\n\r\n    getData = (obj) => {\r\n        if (obj.key === 'music') {\r\n            this.setState({type: 'music'});\r\n            if (this.state.musicData.length === 0) {\r\n                this.getMusic();\r\n            }\r\n        } else {\r\n            this.setState({type: 'album'});\r\n            if (this.state.albumData.length === 0) {\r\n                this.getAlbum();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return (\r\n            <div>\r\n                <div style={{display: 'flex', height: '200px'}}>\r\n                    <img alt={musicData.artistName} src={data.artistImg} />\r\n                    <Card title={data.artistName} >\r\n                        <div style={{overflow: 'auto'}}>\r\n                            <Paragraph ellipsis={{rows: 3, expandable: true, suffix: '...', symbol: '展开'}}>\r\n                                {data.artistDescription}\r\n                            </Paragraph>\r\n                        </div>\r\n                        \r\n                    </Card>\r\n                </div>\r\n                <Content style={{ padding: '10px', minHeight: 280}}>\r\n                    <Menu mode=\"horizontal\" defaultSelectedKeys=\"music\" onClick={this.getData}>\r\n                        <Menu.Item key=\"music\">\r\n                            单曲\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"album\">\r\n                            专辑\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                    {this.state.type === 'music' ? \r\n                    <Table columns={colomns} dataSource={this.state.musicData.musicVOList} showHeader={false} pagination={{defaultPageSize: 20}} rowKey=\"musicId\" />\r\n                    : <div></div>}\r\n                </Content>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}