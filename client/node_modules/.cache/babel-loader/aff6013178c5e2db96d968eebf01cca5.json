{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\Music_Recommend_System\\\\client\\\\src\\\\pages\\\\TopList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Layout, Menu, Table } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { playBarStore } from \"../../stores/playBarStore\";\nimport { SERVER_URL } from \"../../utils/constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Content,\n  Sider\n} = Layout;\nconst {\n  SubMenu\n} = Menu;\nconst colomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  },\n  width: '50px'\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  ellipsis: true,\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        playBarStore.addMusic(record);\n      },\n      style: {\n        padding: '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: text,\n        src: record.albumImg,\n        style: {\n          height: '50px',\n          width: '50px',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this);\n  },\n  width: '300px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  ellipsis: true,\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/artist/${record.artistId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this);\n  },\n  width: '150px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  ellipsis: true,\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this);\n  },\n  width: '150px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  title: '时长',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this);\n  },\n  width: '100px'\n}];\nexport default function TopList(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [selectedKeys, setSelectedKeys] = useState('type=total');\n  const [title, setTitle] = useState('总榜');\n  const titleArr = ['华语榜', '欧美榜', '日韩榜'];\n  useEffect(() => {\n    const params = new URLSearchParams(props.location.search);\n    const type = params.get('type');\n    axios({\n      method: 'GET',\n      url: SERVER_URL + 'topList',\n      params: {\n        type: type\n      }\n    }).then(response => {\n      if (response.data.status === 200) {\n        setData(response.data.data);\n        setSelectedKeys(`type=${type}`);\n        setTitle(type === 'total' ? '总榜' : titleArr[parseInt(type)]);\n      } else {\n        props.history.push('/error');\n      }\n    }); // eslint-disable-next-line\n  }, [props]);\n\n  const handleClick = obj => {\n    props.history.push(`/top_list?${obj.key}`);\n  };\n\n  const tableTitle = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '25px',\n          display: 'inline',\n          marginRight: '20px'\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '15px',\n          display: 'inline'\n        },\n        children: \"\\u6BCF\\u65E5\\u66F4\\u65B0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Sider, {\n      style: {\n        width: 250\n      },\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        mode: \"inline\",\n        defaultSelectedKeys: \"type=total\",\n        style: {\n          height: '100%'\n        },\n        onClick: handleClick,\n        defaultOpenKeys: ['0', '1', '2'],\n        selectedKeys: selectedKeys,\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u603B\\u699C\"\n        }, \"type=total\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u534E\\u8BED\\u699C\"\n        }, \"type=0\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u6B27\\u7F8E\\u699C\"\n        }, \"type=1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u65E5\\u97E9\\u699C\"\n        }, \"type=2\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        minHeight: 280\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: data,\n        columns: colomns,\n        rowKey: record => record.musicId,\n        pagination: false,\n        title: tableTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TopList, \"B+y1IsEQe9JQWG+XNE8f9ip396k=\");\n\n_c = TopList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopList\");","map":{"version":3,"sources":["D:/Programming/Project/Music_Recommend_System/client/src/pages/TopList/index.jsx"],"names":["React","useEffect","useRef","useState","Button","Layout","Menu","Table","Link","axios","playBarStore","SERVER_URL","Content","Sider","SubMenu","colomns","key","render","text","record","index","width","dataIndex","title","ellipsis","addMusic","padding","albumImg","height","marginRight","artistId","albumId","parseInt","min","Math","floor","sec","TopList","props","data","setData","selectedKeys","setSelectedKeys","setTitle","titleArr","params","URLSearchParams","location","search","type","get","method","url","then","response","status","history","push","handleClick","obj","tableTitle","fontWeight","fontSize","display","minHeight","musicId"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {Button, Layout, Menu, Table} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {playBarStore} from \"../../stores/playBarStore\";\r\nimport {SERVER_URL} from \"../../utils/constant\";\r\n\r\nconst { Content, Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n            return index + 1;\r\n        },\r\n        width: '50px'\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playBarStore.addMusic(record);\r\n            }} style={{padding: '0'}}>\r\n                <img alt={text} src={record.albumImg} style={{height: '50px', width: '50px', marginRight: '10px'}} />\r\n                {text}\r\n            </Button>);\r\n        },\r\n        width: '300px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '150px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '150px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        title: '时长',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '100px'\r\n    }\r\n]\r\n\r\nexport default function TopList(props) {\r\n    const [data, setData] = useState([]);\r\n    const [selectedKeys, setSelectedKeys] = useState('type=total');\r\n    const [title, setTitle] = useState('总榜');\r\n\r\n    const titleArr = ['华语榜', '欧美榜', '日韩榜'];\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(props.location.search);\r\n        const type = params.get('type');\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + 'topList',\r\n            params: {\r\n                type: type\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.status === 200) {\r\n                setData(response.data.data);\r\n                setSelectedKeys(`type=${type}`);\r\n                setTitle(type === 'total' ? '总榜' : titleArr[parseInt(type)]);\r\n            } else {\r\n                props.history.push('/error');\r\n            }\r\n        });  // eslint-disable-next-line\r\n    }, [props]);\r\n\r\n    const handleClick = (obj) => {\r\n        props.history.push(`/top_list?${obj.key}`);\r\n    }\r\n\r\n    const tableTitle = () => {\r\n        return (\r\n            <>\r\n                <div style={{fontWeight: 'bold', fontSize: '25px', display: 'inline', marginRight: '20px'}}>{title}</div>\r\n                <div style={{fontSize: '15px', display: 'inline'}}>每日更新</div>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Sider style={{width: 250}}>\r\n                <Menu mode=\"inline\" defaultSelectedKeys=\"type=total\" style={{height: '100%'}} onClick={handleClick} defaultOpenKeys={['0', '1', '2']} selectedKeys={selectedKeys}>\r\n                    <Menu.Item key=\"type=total\">总榜</Menu.Item>\r\n                    <Menu.Item key=\"type=0\">华语榜</Menu.Item>\r\n                    <Menu.Item key=\"type=1\">欧美榜</Menu.Item>\r\n                    <Menu.Item key=\"type=2\">日韩榜</Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Content style={{ minHeight: 280}}>\r\n                <Table dataSource={data} columns={colomns} rowKey={record => record.musicId} pagination={false} title={tableTitle} />\r\n            </Content>\r\n        </Layout>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}