{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\MusicRecommendSystem\\\\front\\\\src\\\\pages\\\\Search\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Menu, Table, Button, Row, Col, Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { playMusic } from '../../utils/play';\nimport { SERVER_URL } from '../../utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nconst musicColomns = [{\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        playMusic(record);\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/artist/${record.artistId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  title: '时长',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this);\n  },\n  width: '100px'\n}];\nconst albumColomns = [{\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: text,\n        style: {\n          width: '80px',\n          height: '80px'\n        },\n        src: record.albumImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 'auto 10px'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/artist/${record.artistId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'albumPublishTime',\n  key: 'albumPublishTime',\n  title: '发行时间',\n  width: '200px'\n}];\nexport default function Search(props) {\n  _s();\n\n  const [data, setData] = useState([[]]);\n  const [type, setType] = useState('');\n  const [searchWord, setSearchWord] = useState('');\n  useEffect(() => {\n    const {\n      type,\n      searchWord\n    } = props.match.params;\n    axios({\n      method: 'GET',\n      url: SERVER_URL + `search/${type}/${searchWord}`\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.status === 1) {\n        setType(type);\n        setSearchWord(searchWord);\n\n        if (type === 'artist') {\n          let i = 0;\n          let newData = [];\n\n          while (i < response.data.data.length) {\n            newData.push(response.data.data.slice(i, Math.min(i + 6, response.data.data.length))); //拆成二维数组，为了下面排版\n\n            i += 6;\n          }\n\n          setData(newData);\n        } else {\n          setData(response.data.data);\n        }\n      }\n    });\n  }, [props]);\n\n  const handleClick = obj => {\n    props.history.push(`/search/${obj.key}/${searchWord}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      onClick: handleClick,\n      mode: \"horizontal\",\n      selectedKeys: type,\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"\\u5355\\u66F2\"\n      }, \"music\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"\\u6B4C\\u624B\"\n      }, \"artist\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"\\u4E13\\u8F91\"\n      }, \"album\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), type === 'music' && /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: data,\n      columns: musicColomns,\n      pagination: {\n        defaultPageSize: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 34\n    }, this), type === 'artist' && (data.length > 0 ?\n    /*#__PURE__*/\n    // data.map((artistRow, index) => {\n    //         return (<Row gutter={[10, 5]} key={index}>\n    //             {artistRow.map((artist, index) => {\n    //                 return (<Col span={4} key={index}>\n    //                     <Link to={`/artist/${artist.artistId}`}>\n    //                             <Card hoverable cover={<img alt={artist.artistName} src={artist.artistImg} />}>\n    //                                     <Meta title={artist.artistName} style={{textAlign: 'center'}} />\n    //                             </Card>\n    //                     </Link>\n    //                 </Col>)\n    //             })}\n    //         </Row>);}) \n    _jsxDEV(Row, {\n      gutter: 10,\n      children: data.map(artist => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          span: 6,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/artist/${artist.artistId}`,\n            children: [\"//                             \", /*#__PURE__*/_jsxDEV(Card, {\n              hoverable: true,\n              cover: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: artist.artistName,\n                src: artist.artistImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 67\n              }, this),\n              children: [\"//                                     \", /*#__PURE__*/_jsxDEV(Meta, {\n                title: artist.artistName,\n                style: {\n                  textAlign: 'center'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: [],\n      showHeader: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }, this)), type === 'album' && /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: data,\n      columns: albumColomns,\n      pagination: {\n        defaultPageSize: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"KCtaETZWVV0Y7mDxW90G0hHTSKc=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Programming/Project/MusicRecommendSystem/front/src/pages/Search/index.jsx"],"names":["axios","React","useState","useEffect","Menu","Table","Button","Row","Col","Card","Link","playMusic","SERVER_URL","Meta","musicColomns","dataIndex","key","title","render","text","record","index","width","artistId","albumId","parseInt","min","Math","floor","sec","albumColomns","display","height","albumImg","margin","Search","props","data","setData","type","setType","searchWord","setSearchWord","match","params","method","url","then","response","console","log","status","i","newData","length","push","slice","handleClick","obj","history","defaultPageSize","map","artist","artistName","artistImg","textAlign"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\nimport {Menu, Table, Button, Row, Col, Card} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { playMusic } from '../../utils/play';\r\nimport { SERVER_URL } from '../../utils/constant';\r\n\r\nconst {Meta} = Card;\r\nconst musicColomns = [\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playMusic(record);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        title: '时长',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\n\r\nconst albumColomns = [\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        render: (text, record, index) => {\r\n            return (\r\n            <Link to={`/album/${record.albumId}`} style={{display: 'flex'}}>\r\n                <img alt={text} style={{width: '80px', height: '80px'}} src={record.albumImg} />\r\n                <div style={{margin: 'auto 10px'}}>{text}</div>\r\n            </Link>\r\n            );\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'albumPublishTime',\r\n        key: 'albumPublishTime',\r\n        title: '发行时间',\r\n        width: '200px'\r\n    }\r\n];\r\n\r\nexport default function Search(props) {\r\n    const [data, setData] = useState([[]]);\r\n    const [type, setType] = useState('');\r\n    const [searchWord, setSearchWord] = useState('');\r\n\r\n    useEffect(() => {\r\n        const {type, searchWord} = props.match.params;\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + `search/${type}/${searchWord}`\r\n        }).then((response) => {\r\n            console.log(response);\r\n            if (response.data.status === 1) {\r\n                setType(type);\r\n                setSearchWord(searchWord);\r\n                if (type === 'artist') {\r\n                    let i = 0;\r\n                    let newData = [];\r\n                    while (i < response.data.data.length) {\r\n                        newData.push(response.data.data.slice(i, Math.min(i + 6, response.data.data.length)));  //拆成二维数组，为了下面排版\r\n                        i += 6;\r\n                    }\r\n                    setData(newData);\r\n                } else {\r\n                    setData(response.data.data);\r\n                }\r\n            }\r\n        });\r\n    }, [props]);\r\n\r\n    const handleClick = (obj) => {\r\n        props.history.push(`/search/${obj.key}/${searchWord}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu onClick={handleClick} mode=\"horizontal\" selectedKeys={type}>\r\n                <Menu.Item key=\"music\">\r\n                    单曲\r\n                </Menu.Item>\r\n                <Menu.Item key=\"artist\">\r\n                    歌手\r\n                </Menu.Item>\r\n                <Menu.Item key=\"album\">\r\n                    专辑\r\n                </Menu.Item>\r\n            </Menu>\r\n            {type === 'music' && <Table dataSource={data} columns={musicColomns} pagination={{defaultPageSize: 20}} />}\r\n            {type === 'artist' && (data.length > 0 ? \r\n            // data.map((artistRow, index) => {\r\n            //         return (<Row gutter={[10, 5]} key={index}>\r\n            //             {artistRow.map((artist, index) => {\r\n            //                 return (<Col span={4} key={index}>\r\n            //                     <Link to={`/artist/${artist.artistId}`}>\r\n            //                             <Card hoverable cover={<img alt={artist.artistName} src={artist.artistImg} />}>\r\n            //                                     <Meta title={artist.artistName} style={{textAlign: 'center'}} />\r\n            //                             </Card>\r\n            //                     </Link>\r\n            //                 </Col>)\r\n            //             })}\r\n            //         </Row>);}) \r\n            <Row gutter={10}>\r\n                {data.map((artist) => {\r\n                    return (<Col span={6}>\r\n                        <Link to={`/artist/${artist.artistId}`}>\r\n            //                             <Card hoverable cover={<img alt={artist.artistName} src={artist.artistImg} />}>\r\n            //                                     <Meta title={artist.artistName} style={{textAlign: 'center'}} />\r\n                                       </Card>\r\n                               </Link>\r\n                    </Col>)\r\n                })}\r\n            </Row>\r\n            : <Table dataSource={[]} showHeader={false} />)}\r\n            {type === 'album' && <Table dataSource={data} columns={albumColomns} pagination={{defaultPageSize: 20}} />}\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}