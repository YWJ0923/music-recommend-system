{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\MusicRecommendSystem\\\\front\\\\src\\\\pages\\\\SearchResult\\\\index.jsx\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Menu, Table, Button, Row, Col, Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { playMusic } from '../../utils/play';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nconst colomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  }\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        playMusic(record);\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'artistName',\n  key: 'artistName',\n  title: '歌手',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  title: '时长',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this);\n  },\n  width: '100px'\n}];\nexport default class SearchResult extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      word: ''\n    };\n\n    this.handleClick = obj => {\n      this.props.history.push(`/search?`);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      search\n    } = this.props.location;\n    const searchParams = new URLSearchParams(search.substring(1));\n    const word = searchParams.get('word');\n    axios({\n      method: 'GET',\n      url: 'http://localhost:3001/server/search',\n      params: {\n        word: word,\n        type: 'music'\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.status === 1) {\n        this.setState({\n          data: response.data.data\n        });\n        this.setState({\n          word: word\n        });\n      }\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const {\n      search\n    } = this.props.location;\n    const searchParams = new URLSearchParams(search.substring(1));\n    const word = searchParams.get('word');\n\n    if (artistType === 'hot') {\n      let menuItem = document.getElementById('hot');\n      menuItem.click();\n    }\n\n    axios({\n      method: 'GET',\n      url: 'http://localhost:3001/server/search',\n      params: {\n        word: this.state.word,\n        type: obj.key\n      }\n    }).then(response => {\n      if (response.data.status === 1) {\n        if (obj.key === 'artist') {\n          let i = 0;\n          var newData = [];\n\n          while (i < response.data.length) {\n            newData.push(response.data.slice(i, Math.min(i + 6, response.data.length))); //拆成二维数组，为了下面排版\n\n            i += 6;\n          }\n\n          this.setState({\n            data: newData\n          });\n        }\n\n        this.setState({\n          data: response.data.data\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      data,\n      word\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        onClick: this.handleClick,\n        mode: \"horizontal\",\n        defaultSelectedKeys: \"music\",\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u5355\\u66F2\"\n        }, \"music\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u6B4C\\u624B\"\n        }, \"artist\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u4E13\\u8F91\"\n        }, \"album\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), word === 'music' && /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: data,\n        columns: colomns,\n        pagination: {\n          defaultPageSize: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 38\n      }, this), word === 'artist' && this.state.data.map((artistRow, index) => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [10, 5],\n          children: artistRow.map((artist, index) => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              span: 4,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/artist/${artist.artistId}`,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  hoverable: true,\n                  cover: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: artist.artistName,\n                    src: artist.artistImg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 68\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Meta, {\n                    title: artist.artistName,\n                    style: {\n                      textAlign: 'center'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 41\n            }, this);\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }, this);\n      })]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["D:/Programming/Project/MusicRecommendSystem/front/src/pages/SearchResult/index.jsx"],"names":["axios","React","Component","Menu","Table","Button","Row","Col","Card","Link","playMusic","Meta","colomns","key","render","text","record","index","dataIndex","title","width","albumId","parseInt","min","Math","floor","sec","SearchResult","state","data","word","handleClick","obj","props","history","push","componentDidMount","search","location","searchParams","URLSearchParams","substring","get","method","url","params","type","then","response","console","log","status","setState","UNSAFE_componentWillReceiveProps","nextProps","artistType","menuItem","document","getElementById","click","i","newData","length","slice","defaultPageSize","map","artistRow","artist","artistId","artistName","artistImg","textAlign"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport {Menu, Table, Button, Row, Col, Card} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { playMusic } from '../../utils/play';\r\n\r\nconst {Meta} = Card;\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text,record,index) => {return index + 1;}\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playMusic(record);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        title: '时长',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\n\r\nexport default class SearchResult extends Component {\r\n    state = {data: [], word: ''}\r\n\r\n    componentDidMount() {\r\n        const {search} = this.props.location;\r\n        const searchParams = new URLSearchParams(search.substring(1));\r\n        const word = searchParams.get('word');\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/search',\r\n            params: {\r\n                word: word,\r\n                type: 'music'\r\n            }\r\n        }).then((response) => {\r\n            console.log(response);\r\n            if (response.data.status === 1) {\r\n                this.setState({data: response.data.data});\r\n                this.setState({word: word});\r\n            }\r\n        });\r\n    }\r\n\r\n    handleClick = (obj) => {\r\n        this.props.history.push(`/search?`)\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        const {search} = this.props.location;\r\n        const searchParams = new URLSearchParams(search.substring(1));\r\n        const word = searchParams.get('word');\r\n        if (artistType === 'hot') {\r\n            let menuItem = document.getElementById('hot');\r\n            menuItem.click();\r\n        }\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/search',\r\n            params: {\r\n                word: this.state.word,\r\n                type: obj.key\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.status === 1) {\r\n                if (obj.key === 'artist') {\r\n                    let i = 0;\r\n                    var newData = [];\r\n                    while (i < response.data.length) {\r\n                        newData.push(response.data.slice(i, Math.min(i + 6, response.data.length)));  //拆成二维数组，为了下面排版\r\n                        i += 6;\r\n                    }\r\n                    this.setState({data: newData});\r\n                }\r\n                this.setState({data: response.data.data});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {data, word} = this.state;\r\n        return (\r\n            <>\r\n                <Menu onClick={this.handleClick} mode=\"horizontal\" defaultSelectedKeys=\"music\">\r\n                    <Menu.Item key=\"music\">\r\n                        单曲\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"artist\">\r\n                        歌手\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"album\">\r\n                        专辑\r\n                    </Menu.Item>\r\n                </Menu>\r\n                {word === 'music' && <Table dataSource={data} columns={colomns} pagination={{defaultPageSize: 20}} />}\r\n                {word === 'artist' && this.state.data.map((artistRow, index) => {\r\n                        return (<Row gutter={[10, 5]} key={index}>\r\n                            {artistRow.map((artist, index) => {\r\n                                return (<Col span={4} key={index}>\r\n                                    <Link to={`/artist/${artist.artistId}`}>\r\n                                            <Card hoverable cover={<img alt={artist.artistName} src={artist.artistImg} />}>\r\n                                                    <Meta title={artist.artistName} style={{textAlign: 'center'}} />\r\n                                            </Card>\r\n                                    </Link>\r\n                                </Col>)\r\n                            })}\r\n                        </Row>);\r\n                    })}\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}