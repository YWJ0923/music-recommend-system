{"ast":null,"code":"import _slicedToArray from\"D:/Programming/Project/Music_Recommend_System/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'axios';import{Link}from'react-router-dom';import{Button,Table}from'antd';import{getToken}from'../../../utils/auth';import{SERVER_URL}from'../../../utils/constant';import{playBarStore}from\"../../../stores/playBarStore\";import{showNotification}from\"../../../utils/common\";import PubSub from\"pubsub-js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var colomns=[{key:'index',render:function render(text,record,index){return index+1;},width:'50px'},{dataIndex:'musicName',key:'musicName',title:'歌曲',ellipsis:true,render:function render(text,record,index){return/*#__PURE__*/_jsx(Button,{type:\"link\",onClick:function onClick(){playBarStore.addMusic(record);},style:{padding:'0'},children:text});},width:'300px'},{dataIndex:'artistName',key:'artistName',title:'歌手',ellipsis:true,render:function render(text,record,index){return/*#__PURE__*/_jsx(Link,{to:\"/artist/\".concat(record.artistId),children:text});},width:'150px'},{dataIndex:'albumName',key:'albumName',title:'专辑',ellipsis:true,render:function render(text,record,index){return/*#__PURE__*/_jsx(Link,{to:\"/album/\".concat(record.albumId),children:text});},width:'150px'},{dataIndex:'userPlayTimes',key:'userPlayTimes',title:'播放次数',render:function render(text){return text+'次';},width:'100px'}];export default function Ranking(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),ranking=_useState2[0],setRanking=_useState2[1];useEffect(function(){axios({method:'GET',url:SERVER_URL+'user/music_ranking',headers:{Authorization:getToken()}}).then(function(response){if(response.data.status===401){PubSub.publish('logout');props.history.push('/');showNotification('请先登录');}else if(response.data.status===200){setRanking(response.data.data);}else{props.history.push('/error');}});// eslint-disable-next-line\n},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Table,{dataSource:ranking,columns:colomns,title:function title(){return'听歌排行';},rowKey:function rowKey(record){return record.musicId;},pagination:false})});}","map":{"version":3,"sources":["D:/Programming/Project/Music_Recommend_System/client/src/pages/MyMusic/Ranking/index.jsx"],"names":["React","useEffect","useState","axios","Link","Button","Table","getToken","SERVER_URL","playBarStore","showNotification","PubSub","colomns","key","render","text","record","index","width","dataIndex","title","ellipsis","addMusic","padding","artistId","albumId","Ranking","props","ranking","setRanking","method","url","headers","Authorization","then","response","data","status","publish","history","push","musicId"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Table} from 'antd';\r\nimport { getToken } from '../../../utils/auth';\r\nimport { SERVER_URL } from '../../../utils/constant';\r\nimport {playBarStore} from \"../../../stores/playBarStore\";\r\nimport {showNotification} from \"../../../utils/common\";\r\nimport PubSub from \"pubsub-js\";\r\n\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n            return index + 1;\r\n        },\r\n        width: '50px'\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playBarStore.addMusic(record);\r\n            }} style={{padding: '0'}}>{text}</Button>);\r\n        },\r\n        width: '300px'\r\n    },\r\n    {\r\n        dataIndex: 'artistName',\r\n        key: 'artistName',\r\n        title: '歌手',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/artist/${record.artistId}`}>{text}</Link>);\r\n        },\r\n        width: '150px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        ellipsis: true,\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '150px'\r\n    },\r\n    {\r\n        dataIndex: 'userPlayTimes',\r\n        key: 'userPlayTimes',\r\n        title: '播放次数',\r\n        render: (text) => {\r\n            return text + '次';\r\n        },\r\n        width: '100px'\r\n    }\r\n]\r\n\r\nexport default function Ranking(props) {\r\n    const [ranking, setRanking] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + 'user/music_ranking',\r\n            headers: {\r\n                Authorization: getToken()\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.status === 401) {\r\n                PubSub.publish('logout');\r\n                props.history.push('/');\r\n                showNotification('请先登录');\r\n            } else if (response.data.status === 200) {\r\n                setRanking(response.data.data);\r\n            } else {\r\n                props.history.push('/error');\r\n            }\r\n        });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table dataSource={ranking} columns={colomns} title={() => '听歌排行'} rowKey={record => record.musicId} pagination={false} />\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}