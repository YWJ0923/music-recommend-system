{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\MusicRecommendSystem\\\\front\\\\src\\\\pages\\\\Artist\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, Layout, Typography, Menu, Table, Button, Row, Col } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { playMusic } from '../../utils/play';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Paragraph\n} = Typography;\nconst {\n  Content\n} = Layout;\nconst {\n  Meta\n} = Card;\nconst colomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  }\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  title: '歌曲',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        playMusic(record); // console.log(text);\n        // console.log(record);\n        // console.log(index);\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'albumName',\n  key: 'albumName',\n  title: '专辑',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${record.albumId}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this);\n  },\n  width: '400px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  title: '时长',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this);\n  },\n  width: '100px'\n}];\nexport default function Artist() {\n  _s();\n\n  const [musicData, setMusicData] = useState({});\n  const [albumData, setAlbumData] = useState({});\n  useEffect(() => {\n    getMusic();\n  });\n\n  const getMusic = () => {\n    this.setState({\n      updated: false\n    });\n    axios({\n      method: 'GET',\n      url: 'http://localhost:3001/server/artist',\n      params: {\n        artistId: this.props.match.params.artistId\n      }\n    }).then(response => {\n      this.setState({\n        musicData: response.data\n      }, () => {\n        this.setState({\n          updated: true\n        });\n      });\n    });\n  };\n\n  getAlbum = () => {\n    this.setState({\n      updated: false\n    });\n    axios({\n      method: 'GET',\n      url: 'http://localhost:3001/server/artist/album',\n      params: {\n        artistId: this.props.match.params.artistId\n      }\n    }).then(response => {\n      this.setState({\n        albumData: response.data\n      }, () => {\n        this.setState({\n          updated: true\n        });\n      });\n    });\n  };\n\n  getData = obj => {\n    if (obj.key === 'music') {\n      if (JSON.stringify(this.state.musicData) === '{}') {\n        this.getMusic();\n      }\n\n      set({\n        type: 'music'\n      });\n    } else {\n      if (JSON.stringify(this.state.albumData) === '{}') {\n        this.getAlbum();\n      }\n\n      this.setState({\n        type: 'album'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: musicData.artistName,\n        src: musicData.artistImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: musicData.artistName,\n        style: {\n          overflow: 'scroll',\n          overflowX: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflow: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paragraph, {\n            ellipsis: {\n              rows: 3,\n              expandable: true,\n              suffix: '...',\n              symbol: '展开'\n            },\n            children: musicData.artistDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        padding: '10px',\n        minHeight: 280\n      },\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        mode: \"horizontal\",\n        defaultSelectedKeys: \"music\",\n        onClick: this.getData,\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u5355\\u66F2\"\n        }, \"music\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"\\u4E13\\u8F91\"\n        }, \"album\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), type === 'music' ? /*#__PURE__*/_jsxDEV(Table, {\n        columns: colomns,\n        dataSource: musicData.musicVOList,\n        showHeader: false,\n        pagination: {\n          defaultPageSize: 20\n        },\n        rowKey: record => record.musicId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 10,\n        children: albumData.artistAlbumVOList.map(album => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/album/${album.albumId}`,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                hoverable: true,\n                cover: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: album.albumName,\n                  src: album.albumImg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 56\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Meta, {\n                  title: album.albumName,\n                  style: {\n                    textAlign: 'center'\n                  },\n                  description: album.albumPublishTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Artist, \"TxfPqdA6odpZWvR0CnrgVsu4GMg=\");\n\n_c = Artist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Artist\");","map":{"version":3,"sources":["D:/Programming/Project/MusicRecommendSystem/front/src/pages/Artist/index.jsx"],"names":["React","Component","axios","Card","Layout","Typography","Menu","Table","Button","Row","Col","Link","playMusic","Paragraph","Content","Meta","colomns","key","render","text","record","index","dataIndex","title","width","albumId","parseInt","min","Math","floor","sec","Artist","musicData","setMusicData","useState","albumData","setAlbumData","useEffect","getMusic","setState","updated","method","url","params","artistId","props","match","then","response","data","getAlbum","getData","obj","JSON","stringify","state","set","type","display","height","artistName","artistImg","overflow","overflowX","rows","expandable","suffix","symbol","artistDescription","padding","minHeight","musicVOList","defaultPageSize","musicId","artistAlbumVOList","map","album","albumName","albumImg","textAlign","albumPublishTime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Card, Layout, Typography, Menu, Table, Button, Row, Col } from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport { playMusic } from '../../utils/play';\r\n\r\nconst { Paragraph } = Typography;\r\nconst {Content} = Layout;\r\nconst {Meta} = Card;\r\n\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text,record,index) => {return index + 1;}\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        title: '歌曲',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                playMusic(record);\r\n                // console.log(text);\r\n                // console.log(record);\r\n                // console.log(index);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'albumName',\r\n        key: 'albumName',\r\n        title: '专辑',\r\n        render: (text, record, index) => {\r\n            return (<Link to={`/album/${record.albumId}`}>{text}</Link>);\r\n        },\r\n        width: '400px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        title: '时长',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '100px'\r\n    }\r\n];\r\n\r\nexport default function Artist() {\r\n    const [musicData, setMusicData] = useState({});\r\n    const [albumData, setAlbumData] = useState({});\r\n\r\n    useEffect(() => {\r\n        getMusic();\r\n    });\r\n\r\n    const getMusic = () => {\r\n        this.setState({updated: false});\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/artist',\r\n            params: {\r\n                artistId: this.props.match.params.artistId\r\n            }\r\n        }).then((response) => {\r\n            this.setState({musicData: response.data}, () => {\r\n                this.setState({updated: true});\r\n            });\r\n        });\r\n    }\r\n\r\n    getAlbum = () => {\r\n        this.setState({updated: false});\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/artist/album',\r\n            params: {\r\n                artistId: this.props.match.params.artistId\r\n            }\r\n        }).then((response) => {\r\n            this.setState({albumData: response.data}, () => {\r\n                this.setState({updated: true});\r\n            });\r\n        });\r\n    }\r\n\r\n    getData = (obj) => {\r\n        if (obj.key === 'music') {\r\n            if (JSON.stringify(this.state.musicData) === '{}') {\r\n                this.getMusic();\r\n            }\r\n            set({type: 'music'});\r\n        } else {\r\n            if (JSON.stringify(this.state.albumData) === '{}') {\r\n                this.getAlbum();\r\n            }\r\n            this.setState({type: 'album'});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{display: 'flex', height: '200px'}}>\r\n                <img alt={musicData.artistName} src={musicData.artistImg} />\r\n                <Card title={musicData.artistName} style={{overflow: 'scroll', overflowX: 'hidden'}}>\r\n                    <div style={{overflow: 'auto'}}>\r\n                        <Paragraph ellipsis={{rows: 3, expandable: true, suffix: '...', symbol: '展开'}}>\r\n                            {musicData.artistDescription}\r\n                        </Paragraph>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <Content style={{ padding: '10px', minHeight: 280}}>\r\n                <Menu mode=\"horizontal\" defaultSelectedKeys=\"music\" onClick={this.getData}>\r\n                    <Menu.Item key=\"music\">\r\n                        单曲\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"album\">\r\n                        专辑\r\n                    </Menu.Item>\r\n                </Menu>\r\n                {type === 'music' ? \r\n                <Table columns={colomns} dataSource={musicData.musicVOList} showHeader={false} pagination={{defaultPageSize: 20}} rowKey={record => record.musicId} />\r\n                : <Row gutter={10}>\r\n                    {albumData.artistAlbumVOList.map((album) => {\r\n                        return (<Col span={6}>\r\n                            <Link to={`/album/${album.albumId}`}>\r\n                                <Card hoverable cover={<img alt={album.albumName} src={album.albumImg} />}>\r\n                                        <Meta title={album.albumName} style={{textAlign: 'center'}} description={album.albumPublishTime} />\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>)\r\n                    })}\r\n                </Row>}\r\n            </Content>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}