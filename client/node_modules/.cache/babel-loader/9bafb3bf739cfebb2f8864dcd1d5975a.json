{"ast":null,"code":"import { makeObservable, observable, action, toJS } from 'mobx';\nimport { getPlayUrl } from \"../utils/play\";\nimport PubSub from \"pubsub-js\";\n\nclass PlayBarStore {\n  constructor() {\n    this.playList = [];\n    this.index = 0;\n    this.playUrl = '';\n\n    this.setPlayList = newPlayList => {\n      this.playList = newPlayList;\n    };\n\n    this.setIndex = newIndex => {\n      this.index = newIndex;\n    };\n\n    this.addMusic = newMusic => {\n      // console.log(toJS(this.playList));\n      PubSub.publish('addPlayTimes');\n      getPlayUrl(toJS(newMusic));\n      let newPlayList = this.playList.filter(music => music.musicId !== newMusic.musicId);\n      newPlayList.push(newMusic);\n      this.setPlayList(newPlayList);\n      this.setIndex(newPlayList.length - 1); // console.log(toJS(this.playList));\n    };\n\n    this.addPlayList = playList => {\n      let newPlayList = toJS(this.playList);\n      getPlayUrl(playList[0]);\n\n      if (newPlayList.length > 0) {\n        for (let i = 0; i < playList.length; i++) {\n          newPlayList = newPlayList.filter(music => music.musicId !== playList[i].musicId);\n        }\n\n        let newIndex = newPlayList.length; // console.log(newIndex);\n\n        newPlayList = newPlayList.concat(playList); // console.log(newPlayList);\n\n        this.setPlayList(newPlayList);\n        this.setIndex(newIndex);\n      } else {\n        this.setPlayList(playList);\n        this.setIndex(0);\n      }\n    };\n\n    this.setPlayUrl = newPlayUrl => {\n      this.playUrl = newPlayUrl;\n    };\n\n    makeObservable(this, {\n      playList: observable,\n      index: observable,\n      playUrl: observable,\n      setPlayList: action,\n      addMusic: action,\n      setIndex: action,\n      setPlayUrl: action,\n      addPlayList: action\n    });\n  }\n\n}\n\nexport const playBarStore = new PlayBarStore();","map":{"version":3,"sources":["D:/Programming/Project/Music_Recommend_System/client/src/stores/playBarStore.js"],"names":["makeObservable","observable","action","toJS","getPlayUrl","PubSub","PlayBarStore","constructor","playList","index","playUrl","setPlayList","newPlayList","setIndex","newIndex","addMusic","newMusic","publish","filter","music","musicId","push","length","addPlayList","i","concat","setPlayUrl","newPlayUrl","playBarStore"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,UAAxB,EAAoCC,MAApC,EAA4CC,IAA5C,QAAuD,MAAvD;AACA,SAAQC,UAAR,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,YAAN,CAAmB;AAOfC,EAAAA,WAAW,GAAG;AAAA,SANdC,QAMc,GANH,EAMG;AAAA,SAJdC,KAIc,GAJN,CAIM;AAAA,SAFdC,OAEc,GAFJ,EAEI;;AAAA,SAadC,WAbc,GAaCC,WAAD,IAAiB;AAC3B,WAAKJ,QAAL,GAAgBI,WAAhB;AACH,KAfa;;AAAA,SAiBdC,QAjBc,GAiBFC,QAAD,IAAc;AACrB,WAAKL,KAAL,GAAaK,QAAb;AACH,KAnBa;;AAAA,SAqBdC,QArBc,GAqBFC,QAAD,IAAc;AACrB;AACAX,MAAAA,MAAM,CAACY,OAAP,CAAe,cAAf;AACAb,MAAAA,UAAU,CAACD,IAAI,CAACa,QAAD,CAAL,CAAV;AACA,UAAIJ,WAAW,GAAG,KAAKJ,QAAL,CAAcU,MAAd,CAAqBC,KAAK,IAAIA,KAAK,CAACC,OAAN,KAAkBJ,QAAQ,CAACI,OAAzD,CAAlB;AACAR,MAAAA,WAAW,CAACS,IAAZ,CAAiBL,QAAjB;AACA,WAAKL,WAAL,CAAiBC,WAAjB;AACA,WAAKC,QAAL,CAAcD,WAAW,CAACU,MAAZ,GAAqB,CAAnC,EAPqB,CAQrB;AACH,KA9Ba;;AAAA,SAgCdC,WAhCc,GAgCCf,QAAD,IAAc;AACxB,UAAII,WAAW,GAAGT,IAAI,CAAC,KAAKK,QAAN,CAAtB;AACAJ,MAAAA,UAAU,CAACI,QAAQ,CAAC,CAAD,CAAT,CAAV;;AACA,UAAII,WAAW,CAACU,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,QAAQ,CAACc,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACtCZ,UAAAA,WAAW,GAAGA,WAAW,CAACM,MAAZ,CAAmBC,KAAK,IAAIA,KAAK,CAACC,OAAN,KAAkBZ,QAAQ,CAACgB,CAAD,CAAR,CAAYJ,OAA1D,CAAd;AACH;;AACD,YAAIN,QAAQ,GAAGF,WAAW,CAACU,MAA3B,CAJwB,CAKxB;;AACAV,QAAAA,WAAW,GAAGA,WAAW,CAACa,MAAZ,CAAmBjB,QAAnB,CAAd,CANwB,CAOxB;;AACA,aAAKG,WAAL,CAAiBC,WAAjB;AACA,aAAKC,QAAL,CAAcC,QAAd;AACH,OAVD,MAUO;AACH,aAAKH,WAAL,CAAiBH,QAAjB;AACA,aAAKK,QAAL,CAAc,CAAd;AACH;AACJ,KAjDa;;AAAA,SAmDda,UAnDc,GAmDAC,UAAD,IAAgB;AACzB,WAAKjB,OAAL,GAAeiB,UAAf;AACH,KArDa;;AACV3B,IAAAA,cAAc,CAAC,IAAD,EAAO;AACjBQ,MAAAA,QAAQ,EAAEP,UADO;AAEjBQ,MAAAA,KAAK,EAAER,UAFU;AAGjBS,MAAAA,OAAO,EAAET,UAHQ;AAIjBU,MAAAA,WAAW,EAAET,MAJI;AAKjBa,MAAAA,QAAQ,EAAEb,MALO;AAMjBW,MAAAA,QAAQ,EAAEX,MANO;AAOjBwB,MAAAA,UAAU,EAAExB,MAPK;AAQjBqB,MAAAA,WAAW,EAAErB;AARI,KAAP,CAAd;AAUH;;AAlBc;;AA+DnB,OAAO,MAAM0B,YAAY,GAAG,IAAItB,YAAJ,EAArB","sourcesContent":["import {makeObservable, observable, action, toJS} from 'mobx';\r\nimport {getPlayUrl} from \"../utils/play\";\r\nimport PubSub from \"pubsub-js\";\r\n\r\nclass PlayBarStore {\r\n    playList = [];\r\n\r\n    index = 0;\r\n\r\n    playUrl = '';\r\n\r\n    constructor() {\r\n        makeObservable(this, {\r\n            playList: observable,\r\n            index: observable,\r\n            playUrl: observable,\r\n            setPlayList: action,\r\n            addMusic: action,\r\n            setIndex: action,\r\n            setPlayUrl: action,\r\n            addPlayList: action\r\n        })\r\n    }\r\n\r\n    setPlayList = (newPlayList) => {\r\n        this.playList = newPlayList;\r\n    }\r\n\r\n    setIndex = (newIndex) => {\r\n        this.index = newIndex;\r\n    }\r\n\r\n    addMusic = (newMusic) => {\r\n        // console.log(toJS(this.playList));\r\n        PubSub.publish('addPlayTimes');\r\n        getPlayUrl(toJS(newMusic));\r\n        let newPlayList = this.playList.filter(music => music.musicId !== newMusic.musicId);\r\n        newPlayList.push(newMusic);\r\n        this.setPlayList(newPlayList);\r\n        this.setIndex(newPlayList.length - 1);\r\n        // console.log(toJS(this.playList));\r\n    }\r\n\r\n    addPlayList = (playList) => {\r\n        let newPlayList = toJS(this.playList);\r\n        getPlayUrl(playList[0]);\r\n        if (newPlayList.length > 0) {\r\n            for (let i = 0; i < playList.length; i++) {\r\n                newPlayList = newPlayList.filter(music => music.musicId !== playList[i].musicId);\r\n            }\r\n            let newIndex = newPlayList.length;\r\n            // console.log(newIndex);\r\n            newPlayList = newPlayList.concat(playList);\r\n            // console.log(newPlayList);\r\n            this.setPlayList(newPlayList);\r\n            this.setIndex(newIndex);\r\n        } else {\r\n            this.setPlayList(playList);\r\n            this.setIndex(0);\r\n        }\r\n    }\r\n\r\n    setPlayUrl = (newPlayUrl) => {\r\n        this.playUrl = newPlayUrl;\r\n    }\r\n}\r\n\r\nexport const playBarStore = new PlayBarStore();\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}