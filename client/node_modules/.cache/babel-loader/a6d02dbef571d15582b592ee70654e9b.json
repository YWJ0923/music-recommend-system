{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Project\\\\MusicRecommendSystem\\\\front\\\\src\\\\pages\\\\Album\\\\index.jsx\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport PubSub from 'pubsub-js';\nimport { Image, Button, Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colomns = [{\n  key: 'index',\n  render: (text, record, index) => {\n    return index + 1;\n  }\n}, {\n  dataIndex: 'musicName',\n  key: 'musicName',\n  render: (text, record, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => {\n        axios({\n          method: 'GET',\n          url: 'http://localhost:3001/kugou',\n          params: {\n            r: 'play/getdata',\n            hash: record.musicId,\n            album_id: record.albumId,\n            mid: 1\n          }\n        }).then(response => {\n          record.playUrl = response.data.data.play_url;\n          PubSub.publish('play', record); // record是包含url的MusicVO\n        }); // console.log(text);\n        // console.log(record);\n        // console.log(index);\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this);\n  },\n  width: '500px'\n}, {\n  dataIndex: 'timeLength',\n  key: 'timeLength',\n  render: text => {\n    text = parseInt(text);\n    text /= 1000;\n    var min = Math.floor(text / 60);\n\n    if (min < 10) {\n      min = '0' + min;\n    }\n\n    var sec = Math.floor(text % 60);\n\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: min + ':' + sec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this);\n  },\n  width: '200px'\n}];\nexport default class Album extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      updated: false\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:3001/server/album',\n      params: {\n        albumId: this.props.match.params.albumId\n      }\n    }).then(response => {\n      console.log(response.data);\n      this.setState({\n        data: response.data\n      }, () => {\n        this.setState({\n          updated: true\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      data,\n      updated\n    } = this.state;\n    return updated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info1\",\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: data.albumImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info2\",\n          style: {\n            marginLeft: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: data.albumName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u6B4C\\u624B\\uFF1A\", data.artistName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u53D1\\u884C\\u65E5\\u671F\\uFF1A\", data.albumPublishTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '20px 0'\n          },\n          children: [\"\\u5305\\u542B\\u6B4C\\u66F2\\u5217\\u8868\", data.musicVOList.length, \"\\u9996\\u6B4C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: colomns,\n        dataSource: data.musicVOList,\n        showHeader: false,\n        pagination: {\n          defaultPageSize: 20\n        },\n        rowKey: \"musicId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["D:/Programming/Project/MusicRecommendSystem/front/src/pages/Album/index.jsx"],"names":["axios","React","Component","PubSub","Image","Button","Table","colomns","key","render","text","record","index","dataIndex","method","url","params","r","hash","musicId","album_id","albumId","mid","then","response","playUrl","data","play_url","publish","width","parseInt","min","Math","floor","sec","Album","state","updated","componentDidMount","props","match","console","log","setState","display","albumImg","marginLeft","albumName","artistName","albumPublishTime","margin","musicVOList","length","defaultPageSize"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\nimport { Image, Button, Table } from 'antd';\r\n\r\nconst colomns = [\r\n    {\r\n        key: 'index',\r\n        render: (text,record,index) => {return index + 1;}\r\n    },\r\n    {\r\n        dataIndex: 'musicName',\r\n        key: 'musicName',\r\n        render: (text, record, index) => {\r\n            return (<Button type=\"link\" onClick={() => {\r\n                axios({\r\n                    method: 'GET',\r\n                    url: 'http://localhost:3001/kugou',\r\n                    params: {\r\n                        r: 'play/getdata',\r\n                        hash: record.musicId,\r\n                        album_id: record.albumId,\r\n                        mid: 1\r\n                    }\r\n                }).then((response) => {\r\n                    record.playUrl = response.data.data.play_url;\r\n                    PubSub.publish('play', record);  // record是包含url的MusicVO\r\n                })\r\n                // console.log(text);\r\n                // console.log(record);\r\n                // console.log(index);\r\n            }}>{text}</Button>);\r\n        },\r\n        width: '500px'\r\n    },\r\n    {\r\n        dataIndex: 'timeLength',\r\n        key: 'timeLength',\r\n        render: (text) => {\r\n            text = parseInt(text);\r\n            text /= 1000;\r\n            var min = Math.floor(text / 60);\r\n            if (min < 10) {\r\n                min = '0' + min;\r\n            }\r\n            var sec = Math.floor(text % 60);\r\n            if (sec < 10) {\r\n                sec = '0' + sec;\r\n            }\r\n            return (<span>{min + ':' + sec}</span>);\r\n        },\r\n        width: '200px'\r\n    }\r\n];\r\n\r\nexport default class Album extends Component {\r\n    state = {data: {}, updated: false};\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/server/album',\r\n            params: {\r\n                albumId: this.props.match.params.albumId\r\n            }\r\n        }).then((response) => {\r\n            console.log(response.data);\r\n            this.setState({data: response.data}, () => {\r\n                this.setState({updated: true});\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {data, updated} = this.state;\r\n        return (\r\n            updated && <>\r\n                <div className=\"info1\" style={{display: 'flex'}}>\r\n                    <Image src={data.albumImg} />\r\n                    <div className=\"info2\" style={{marginLeft: '50px'}}>\r\n                        <h2>{data.albumName}</h2>\r\n                        <p>歌手：{data.artistName}</p>\r\n                        <p>发行日期：{data.albumPublishTime}</p>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2 style={{margin: '20px 0'}}>包含歌曲列表{data.musicVOList.length}首歌</h2>\r\n                </div>\r\n                <Table columns={colomns} dataSource={data.musicVOList} showHeader={false} pagination={{defaultPageSize: 20}} rowKey=\"musicId\" />\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}