{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React\\\\Music_Recommend_System\\\\front\\\\src\\\\pages\\\\Discover\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Card, Carousel, Col, Image, Row } from \"antd\";\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../../utils/constant\";\nimport { Link } from \"react-router-dom\";\nimport { playBarStore } from \"../../stores/playBarStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nexport default function Discover() {\n  _s();\n\n  const [musicList, setMusicList] = useState([]);\n  const [albumList, setAlbumList] = useState([]);\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: SERVER_URL + 'latestMusics'\n    }).then(response => {\n      setMusicList(response.data.data);\n    });\n    axios({\n      method: 'GET',\n      url: SERVER_URL + 'latestAlbums'\n    }).then(response => {\n      setAlbumList(response.data.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '20px'\n        },\n        children: \"\\u65B0\\u6B4C\\u9996\\u53D1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [0, 5],\n        children: musicList.map(music => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '70px',\n                display: 'flex',\n                width: '315px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/album/${music.albumId}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: music.albumName,\n                  src: music.albumImg,\n                  style: {\n                    width: '70px',\n                    height: '70px',\n                    marginRight: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '70px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"link\",\n                  onClick: () => {\n                    playBarStore.addMusic(music);\n                  },\n                  style: {\n                    padding: '0px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      height: '35px',\n                      lineHeight: '15px',\n                      fontSize: '15px'\n                    },\n                    children: music.musicName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/artist/${music.artistId}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      height: '35px',\n                      lineHeight: '21px',\n                      fontSize: '13px',\n                      color: '#999'\n                    },\n                    children: music.artistName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '20px'\n        },\n        children: \"\\u65B0\\u789F\\u9996\\u53D1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [10, 5],\n        children: albumList.map(album => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            span: 4.8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '300px'\n              },\n              cover: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: album.albumName,\n                src: album.albumImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 67\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Meta, {\n                title: album.albumName,\n                description: album.artistName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Discover, \"DVtSr1Tpnvd39ZF2DMMMI4Ai2Mk=\");\n\n_c = Discover;\n\nvar _c;\n\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"sources":["D:/Programming/React/Music_Recommend_System/front/src/pages/Discover/index.jsx"],"names":["React","useEffect","useRef","useState","Button","Card","Carousel","Col","Image","Row","LeftOutlined","RightOutlined","axios","SERVER_URL","Link","playBarStore","Meta","Discover","musicList","setMusicList","albumList","setAlbumList","method","url","then","response","data","textAlign","marginBottom","map","music","height","display","width","albumId","albumName","albumImg","marginRight","addMusic","padding","lineHeight","fontSize","musicName","artistId","color","artistName","album"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {Button, Card, Carousel, Col, Image, Row} from \"antd\";\r\nimport {LeftOutlined, RightOutlined} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport {SERVER_URL} from \"../../utils/constant\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {playBarStore} from \"../../stores/playBarStore\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function Discover() {\r\n    const [musicList, setMusicList] = useState([]);\r\n    const [albumList, setAlbumList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + 'latestMusics'\r\n        }).then((response) => {\r\n            setMusicList(response.data.data);\r\n        });\r\n        axios({\r\n            method: 'GET',\r\n            url: SERVER_URL + 'latestAlbums'\r\n        }).then((response) => {\r\n            setAlbumList(response.data.data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1 style={{textAlign: 'center', marginBottom: '20px'}}>新歌首发</h1>\r\n                <Row gutter={[0, 5]}>\r\n                        {musicList.map((music) => {\r\n                            return (<Col>\r\n                                <div style={{height: '70px', display: 'flex', width: '315px'}}>\r\n                                    <Link to={`/album/${music.albumId}`}>\r\n                                        <img alt={music.albumName} src={music.albumImg} style={{width: '70px', height: '70px', marginRight: '10px'}} />\r\n                                    </Link>\r\n                                    <div style={{height: '70px'}}>\r\n                                        <Button type=\"link\" onClick={() => {playBarStore.addMusic(music);}} style={{padding: '0px'}}>\r\n                                            <div style={{height: '35px', lineHeight: '15px', fontSize: '15px'}}>{music.musicName}</div>\r\n                                        </Button>\r\n                                        <Link to={`/artist/${music.artistId}`}>\r\n                                            <div style={{height: '35px', lineHeight: '21px', fontSize: '13px', color: '#999'}}>{music.artistName}</div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>);\r\n                        })}\r\n                </Row>\r\n            </div>\r\n            <div>\r\n                <h1 style={{textAlign: 'center', marginBottom: '20px'}}>新碟首发</h1>\r\n                <Row gutter={[10, 5]}>\r\n                    {albumList.map((album) => {\r\n                        return (<Col span={4.8}>\r\n                            <Card style={{width: '300px'}} cover={<img alt={album.albumName} src={album.albumImg} />}>\r\n                                <Meta title={album.albumName} description={album.artistName} />\r\n                            </Card>\r\n                        </Col>);\r\n                    })}\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}